<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Story on SK Story</title><link>https://www.skstory.online/tags/story/</link><description>Recent content in Story on SK Story</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 Nov 2024 16:02:05 +0800</lastBuildDate><atom:link href="https://www.skstory.online/tags/story/index.xml" rel="self" type="application/rss+xml"/><item><title>Recording My Current Mac Applications</title><link>https://www.skstory.online/p/recording-my-current-mac-applications/</link><pubDate>Mon, 18 Nov 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/recording-my-current-mac-applications/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*3Ie5puTXFNbSKEZ61ibY6A.jpeg" alt="Featured image of post Recording My Current Mac Applications" />&lt;h2 id="kiwi-browser">Kiwi Browser
&lt;/h2>&lt;p>A mobile browser based on Chromium that supports most Chrome extensions, making it particularly useful for mobile web development.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Chrome Extension Support: Install and use Chrome extensions on mobile.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Developer Tools: Open developer tools directly in the mobile version, ideal for testing and debugging.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ad Blocking: Built-in ad blocker for a smoother browsing experience.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://kiwibrowser.com/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*pfIRm0goMk_IqRfNUusPFQ.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="iterm2">iTerm2
&lt;/h2>&lt;p>A powerful terminal emulator for macOS that enhances the command-line experience.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Tabs and Split Panes: Easily manage multiple terminal sessions in a single window.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Customization: Extensive options for themes and key bindings to suit your workflow.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Integrated Search: Quickly find text across your terminal output.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://iterm2.com/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*gfpt-bfYGHDycvibMjPHjA.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="ishot">iShot
&lt;/h2>&lt;p>A versatile screenshot tool that allows capturing various screen areas.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Multiple Capture Modes: Capture the entire screen, specific windows, or selected areas.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Annotation Tools: Add text, arrows, and shapes to screenshots for better clarity.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Instant Sharing: Easily share captured images via email or social media.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://www.better365.cn/ishot.html" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*W9GPLQuBqGkdJm8F8chdvA.jpeg"
loading="lazy"
>&lt;/p>
&lt;h2 id="paste">Paste
&lt;/h2>&lt;p>A clipboard manager that keeps a history of copied items.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Clipboard History: Access and manage a history of clipboard items for easy reuse.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Search Functionality: Quickly find copied items with a powerful search tool.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Multiple Formats: Supports text, images, and other formats, allowing for diverse copying needs.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://pasteapp.io/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*8JtsjlHvziiJB8l3hUIDcg.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="runcat">Runcat
&lt;/h2>&lt;p>A fun and functional process management tool that displays a cat running in the menu bar.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>CPU Monitoring: The cat’s speed reflects CPU usage, providing a visual representation of system performance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Process Management: Easily view and manage running processes directly from the menu bar.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Lightweight: Minimal system impact while offering useful insights.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://kyome.io/runcat/?lang=en" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*rDySaIddJcEjCVGWd2qrlw.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="keycastr">KeyCastr
&lt;/h2>&lt;p>An open-source tool for displaying keyboard shortcuts in real time.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Live Key Display: Shows keyboard inputs on the screen, useful for tutorials or presentations.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Custom Shortcuts: Record and display custom keyboard shortcuts for quick reference.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Export Functionality: Save and share your shortcut configurations with others.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://github.com/keycastr/keycastr" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:964/format:webp/1*oGRO9nC9dtiFxo1hx7JNnQ.gif"
loading="lazy"
>&lt;/p>
&lt;h2 id="cleanmymac-x">CleanMyMac X
&lt;/h2>&lt;p>A comprehensive system cleaning tool designed to optimize Mac performance.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Junk File Removal: Removes unnecessary files, caches, and logs to free up disk space.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Malware Protection: Scans and removes malware for improved security.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>System Optimization: Provides recommendations for optimizing system performance.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://cleanmymac.com/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*1wpoCwdzLxWeu1v8XSTQhA.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="bartender">Bartender
&lt;/h2>&lt;p>A menu bar management tool that organizes and controls menu bar icons.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Icon Hiding: Hide unneeded icons to declutter the menu bar.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rearranging Icons: Easily rearrange icons to prioritize important applications.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Search Functionality: Quickly find and access hidden items.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://www.macbartender.com/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*N_nhyQYzLxa9mpBqMt8jOw@2x.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="rectangle">Rectangle
&lt;/h2>&lt;p>A window management tool that simplifies window resizing and positioning.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Keyboard Shortcuts: Use customizable shortcuts to move and resize windows efficiently.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Snap to Edges: Automatically snap windows to the edges of the screen for easy organization.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Multiple Monitor Support: Manage windows seamlessly across multiple displays.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://rectangleapp.com/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*jZM3GZLMODVMq7z0fBHb9w.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="typora">Typora
&lt;/h2>&lt;p>A markdown editor that provides a seamless writing experience with real-time preview.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Live Preview: See the formatted output as you type, enhancing the writing process.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Export Options: Export documents to various formats like PDF, HTML, and Word.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Custom Themes: Personalize the editor with different themes for a comfortable writing environment.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://typora.io/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*WT5Tq6jpg1_dqSLjO9RSpQ.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="notion">Notion
&lt;/h2>&lt;p>A powerful knowledge management tool for organizing notes, tasks, and databases.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Flexible Document Creation: Create and manage documents, wikis, and notes in one place.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Database Functionality: Build databases to track projects, tasks, and more.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Collaboration Tools: Work collaboratively with team members in real-time.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://www.notion.so/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*HMLGj2xzLe7n6ARF09_r1g.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="fork">Fork
&lt;/h2>&lt;p>A free Git visual client that simplifies version control tasks.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>User-Friendly Interface: Intuitive visuals for managing repositories and branches.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Merge Conflict Resolution: Easily resolve merge conflicts with a clear visual interface.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>History Visualization: View commit history and changes graphically.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://git-fork.com/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*AomV800sS5cSJ3qcOvFhvg.jpeg"
loading="lazy"
>&lt;/p>
&lt;h2 id="warp">Warp
&lt;/h2>&lt;p>A modern terminal application designed for efficiency and productivity.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Command Autocomplete: Intelligent autocomplete suggestions for commands and arguments.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Session Memory: Remember previous commands and sessions for quick access.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AI Integration: Leverage AI tools to enhance terminal workflows.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://www.warp.dev/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*i0N0KVRZz2Py-Say-pVnAQ.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="zed">Zed
&lt;/h2>&lt;p>A next-generation open-source code editor built with Rust.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Basic Editing Features: Supports essential functions like find, replace, and auto-completion.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fast Performance: Optimized for speed and efficiency in coding tasks.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Custom Extensions: Extend functionality with community-created plugins.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://zed.dev/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*XZz2I-LLyda4oYdGdsbs_A.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="he3">He3
&lt;/h2>&lt;p>A toolbox for developers that includes various dedicated tools.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Utility Tools: Includes tools for video editing, image cropping, and audio conversion.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Developer-Focused: Designed with developers’ needs in mind, providing practical utilities.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Integration Capabilities: Works well with other development tools.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://he3app.com/en/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*ITMusOM8OoPXrfbRs6fslw.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="terminus">Terminus
&lt;/h2>&lt;p>A terminal emulator similar to iTerm2 with advanced features.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Multi-Tab Support: Manage multiple terminal sessions with ease.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Customizable Shortcuts: Tailor keyboard shortcuts to fit your workflow.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Theming Options: Choose from various themes to personalize the terminal experience.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://termius.com/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*X8E8sNICfiaK08pLgC3g6g.gif"
loading="lazy"
>&lt;/p>
&lt;h2 id="drawio">draw.io
&lt;/h2>&lt;p>A tool for creating flowcharts, diagrams, and UML charts.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>User-Friendly Interface: Intuitive drag-and-drop functionality for quick diagram creation.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Collaboration Features: Share and collaborate on diagrams with team members in real-time.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Cloud Integration: Save diagrams directly to cloud services for easy access.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://www.drawio.com/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*kb5WwwY1rig-StU3OaOatw.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="xmind">Xmind
&lt;/h2>&lt;p>A mind mapping tool for brainstorming and organizing thoughts.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Mind Mapping Capabilities: Create structured mind maps to visualize ideas.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Presentation Mode: Present mind maps in a clean format for sharing with others.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Export Options: Export mind maps to various formats for easy sharing.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://xmind.app/" target="_blank" rel="noopener"
>Website&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*BvNWsZiBS_nYEOkqDpXPNg.png"
loading="lazy"
>&lt;/p>
&lt;p>These applications enhance productivity and streamline various tasks on my Mac, catering to both development needs and everyday usability.&lt;/p></description></item><item><title>Jumping Out of Nested Loops in JavaScript</title><link>https://www.skstory.online/p/jumping-out-of-nested-loops-in-javascript/</link><pubDate>Fri, 15 Nov 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/jumping-out-of-nested-loops-in-javascript/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*3Ie5puTXFNbSKEZ61ibY6A.jpeg" alt="Featured image of post Jumping Out of Nested Loops in JavaScript" />&lt;p>In JavaScript, there are times when we need to break out of nested loops. Using break only exits the innermost loop. However, we can employ several techniques to achieve our goal.&lt;/p>
&lt;h2 id="overview">overview
&lt;/h2>&lt;p>In JavaScript, there are three ways to exit loops:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Break Statement&lt;/strong>: The &lt;code>break&lt;/code> statement immediately exits the innermost loop or a switch statement.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function exitLoops() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for(let i = 0; i &amp;lt; 10; i++) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if(i == 5) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> break;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.log(i); // 0 1 2 3 4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;strong>Continue Statement&lt;/strong>: The &lt;code>continue&lt;/code> statement is similar to break, but instead of exiting a loop, it starts a new iteration of the loop.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function exitLoops() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for(let i = 0; i &amp;lt; 10; i++) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if(i == 5) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> continue;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.log(i); // 0 1 2 3 4 6 7 8 9
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;strong>Return Statement&lt;/strong>: The &lt;code>return&lt;/code> statement specifies the value returned from a function and can only appear inside a function body.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function exitLoops() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for(let i = 0; i &amp;lt; 10; i++) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if(i == 5) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.log(i); // 0 1 2 3 4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="exiting-nestedloops">Exiting Nested Loops
&lt;/h2>&lt;ol>
&lt;li>Using Labels&lt;/li>
&lt;/ol>
&lt;p>JavaScript allows us to label loop statements and use the break statement to exit a specified loop level.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function exitLoops() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> outerLoop: // Label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for (let i = 0; i &amp;lt; 5; i++) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> innerLoop: // Label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for (let j = 0; j &amp;lt; 5; j++) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (i * j &amp;gt; 10) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.log(`Breaking out of loops at i=${i}, j=${j}`);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> break outerLoop; // Breaks out of outerLoop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In this example, once a condition is met, break outerLoop will immediately exit all loops. The &lt;code>continue outerLoop&lt;/code> can achieve a similar effect.&lt;/p>
&lt;ol start="2">
&lt;li>Using Functions and Return&lt;/li>
&lt;/ol>
&lt;p>Another method is to encapsulate the loops within a function and use &lt;code>return&lt;/code> to terminate the function&amp;rsquo;s execution, thereby exiting the loops.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function exitLoops() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for (let i = 0; i &amp;lt; 5; i++) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for (let j = 0; j &amp;lt; 5; j++) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (i * j &amp;gt; 10) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.log(`Exiting function at i=${i}, j=${j}`);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return; // Exits the function
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">exitLoops();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Here, the &lt;code>return&lt;/code> statement directly terminates the entire function.&lt;/p>
&lt;ol start="3">
&lt;li>Using Try/Catch/Throw&lt;/li>
&lt;/ol>
&lt;p>This method utilizes JavaScript’s exception handling mechanism. Inside the loop, when a condition is met, we can throw an exception and catch it in an outer &lt;code>try/catch&lt;/code> statement to exit the loop.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function exitLoops() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> try {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for (let i = 0; i &amp;lt; 5; i++) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for (let j = 0; j &amp;lt; 5; j++) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (i * j &amp;gt; 10) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> throw `Exiting loops at i=${i}, j=${j}`;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> } catch (e) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.log(e);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">exitLoops();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In this case, when &lt;code>i * j&lt;/code> exceeds 10, we throw a string as an exception and catch it in the outer &lt;code>try/catch&lt;/code>.&lt;/p>
&lt;p>This method can also be used to exit a &lt;code>forEach&lt;/code> loop:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function exitLoops() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> try {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [1, 2, 3, 4, 5].forEach((item) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (item &amp;gt; 2) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> throw `Exiting loops at item=${item}`;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> } catch (e) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.log(e);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">exitLoops();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In this example, we iterate over an array using &lt;code>forEach&lt;/code>. When an element exceeds 2, we throw an exception, which is then caught and printed.&lt;/p>
&lt;p>By using these techniques, you can effectively manage your nested loops in JavaScript.&lt;/p></description></item><item><title>Exploring the Difference Between width: 100% and width: auto</title><link>https://www.skstory.online/p/exploring-the-difference-between-width-100-and-width-auto/</link><pubDate>Sun, 10 Nov 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/exploring-the-difference-between-width-100-and-width-auto/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/0*6aTlWcQeK-86tPxH.png" alt="Featured image of post Exploring the Difference Between width: 100% and width: auto" />&lt;h2 id="introduction-to-the-width-property">Introduction to the width Property
&lt;/h2>&lt;blockquote>
&lt;p>The width property is used to set the width of an element. By default, width sets the width of the content area, but if the box-sizing property is set to border-box, it instead sets the width of the border area.&lt;/p>
&lt;/blockquote>
&lt;h2 id="example">Example
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;head&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/head&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;style&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> div {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> color: #fff;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> font-size: 2rem;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> text-align: center;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .parent {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> width: 600px;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> height: 600px;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> background-color: #2177b8;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> border: 10px solid #21373d;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> padding: 20px;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .child {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> background-color: #ee3f4d;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> border: 10px solid #d8e3e7;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> margin: 20px;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> height: 100px;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .auto{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> width: auto;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .hundred-percent{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> width: 100%;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/style&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;div class=&amp;#34;parent&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> parent
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;div class=&amp;#34;child auto&amp;#34;&amp;gt;child1: width:auto&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;div class=&amp;#34;child hundred-percent&amp;#34;&amp;gt;child2: width:100%&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/html&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In this example, we set the &lt;code>parent&lt;/code> element to have &lt;code>padding: 20px&lt;/code> and gave both child elements &lt;code>margin: 20px&lt;/code>. &lt;code>child1&lt;/code> has a width property of auto, while &lt;code>child2&lt;/code> has a width property of 100%.&lt;/p>
&lt;p>&lt;strong>Observations&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>child1 (width: auto): The width adapts to the content area of the parent and does not overflow. &lt;strong>Final width calculation&lt;/strong> for child1:&lt;/p>
&lt;p>Parent width: 600px&lt;/p>
&lt;p>Margin usage: 20px * 2 = 40px&lt;/p>
&lt;p>Border usage: 10px * 2 = 20px&lt;/p>
&lt;p>Final width = 600px - 40px - 20px = 540px&lt;/p>
&lt;/li>
&lt;li>
&lt;p>child2 (width: 100%): The width equals the width of the parent and may overflow. &lt;strong>Final width calculation&lt;/strong> for child2:&lt;/p>
&lt;p>Parent width: 600px&lt;/p>
&lt;p>Final width = 600px (directly matches the parent width)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;strong>width: 100%&lt;/strong>: The content area of the child element fills the content area of the parent. If the child element also has padding, border, etc., or if the parent has margins and padding, it may cause the child element to overflow.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>width: auto&lt;/strong>: The child element&amp;rsquo;s width is automatically adjusted based on its content, padding, border, and margin to fit within the content area of the parent.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Therefore, in development, it’s advisable to choose width: auto, as it will better maintain the width relative to the parent element. On the other hand, using width: 100% can result in additional spacing being added to the element’s size, potentially leading to layout issues.&lt;/p></description></item><item><title>Understanding useId in Vue3</title><link>https://www.skstory.online/p/understanding-useid-in-vue3/</link><pubDate>Sun, 10 Nov 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/understanding-useid-in-vue3/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/0*6aTlWcQeK-86tPxH.png" alt="Featured image of post Understanding useId in Vue3" />&lt;h2 id="introduction">Introduction
&lt;/h2>&lt;p>The useId function, newly added in Vue 3.5, is primarily used to generate unique IDs. These IDs are unique within the same Vue application, and each call to useId generates a different ID. This functionality is very useful when handling list rendering, form elements, and accessibility attributes, as it ensures that each element has a unique identifier.&lt;/p>
&lt;p>The implementation principle of useId is relatively simple. It generates IDs by accessing the ids property of the Vue instance, which is an array containing a prefix and an incrementing number. Each time useId is called, it retrieves the current number, increments it, and returns the ID. This means that multiple Vue application instances on the same page can avoid ID conflicts by configuring app.config.idPrefix, as each application instance maintains its own ID generation sequence.&lt;/p>
&lt;h2 id="1-source-code">1. Source Code
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">useId&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getCurrentInstance&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">appContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">idPrefix&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;v&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;-&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ids&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ids&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">++&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">__DEV__&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">warn&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">`&lt;/span>&lt;span class="n">useId&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">called&lt;/span> &lt;span class="n">when&lt;/span> &lt;span class="n">there&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">no&lt;/span> &lt;span class="n">active&lt;/span> &lt;span class="n">component&lt;/span> &lt;span class="err">`&lt;/span> &lt;span class="o">+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">`&lt;/span>&lt;span class="n">instance&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">associated&lt;/span> &lt;span class="n">with&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>i.appContext.config.idPrefix&lt;/code>: This is a configuration property obtained from the current component instance to define the prefix for the generated ID. If this prefix exists, it will be used; otherwise, the default &amp;lsquo;v&amp;rsquo; will be used.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>i.ids[0]&lt;/code>: This is the first element of the ids array on the current component instance, typically an empty string, used as part of the ID generation.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>i.ids[1]++&lt;/code>: This is the second element of the ids array, a number used for the incrementing part of the ID. The post-increment operator ++ is used here, which means it returns the current value and then increments it. Each time useId is called, this number increases, ensuring that the generated ID is unique.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="2-setting-the-id-prefix">2. Setting the ID Prefix
&lt;/h2>&lt;p>If you do not want to use the default prefix &amp;lsquo;v&amp;rsquo;, you can set it using &lt;code>app.config.idPrefix&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">createApp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">App&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">idPrefix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;vid&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="3usage">3.Usage
&lt;/h2>&lt;h3 id="31-unique-identifier-for-form-elements">3.1 Unique Identifier for Form Elements
&lt;/h3>&lt;p>In forms, the &lt;code>&amp;lt;label&amp;gt;&lt;/code> tag needs to match the for attribute with the corresponding &lt;code>&amp;lt;input&amp;gt;&lt;/code> tag&amp;rsquo;s id attribute to ensure that clicking the label focuses the input field. Using useId can generate a unique ID for each &lt;code>&amp;lt;input&amp;gt;&lt;/code> element, ensuring this functionality works correctly. For example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">label&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Do&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">like&lt;/span> &lt;span class="n">Vue&lt;/span> &lt;span class="mf">3.5&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">label&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">input&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;checkbox&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">useId&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="32-unique-keys-in-list-rendering">3.2 Unique Keys in List Rendering
&lt;/h3>&lt;p>When rendering lists, each item typically requires a unique key to help Vue track the identity of each node for efficient DOM updates. If your list data does not have a unique key, useId can generate a unique key for each item in the list.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">li&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;item in items&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;item.id&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{{&lt;/span> &lt;span class="n">item&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="err">（&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">item&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="err">）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ne">Array&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">text&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">useId&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Result:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">·Text 0(vid-1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.Text 1(vid-2)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">·Text 2(vid-3)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">·Text 3(vid-4)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">·Text 4(vid-5)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.Text 5(vid-6)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.Text 6(vid-7)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">·Text 7(vid-8)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.Text 8(vid-9)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">·Text 9(vid-10)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="33-avoiding-id-conflicts-in-server-side-rendering-ssr">3.3 Avoiding ID Conflicts in Server-Side Rendering (SSR)
&lt;/h3>&lt;p>Here’s an example of server-side rendering:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">label&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">htmlFor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Do&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">like&lt;/span> &lt;span class="n">Vue3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">label&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">input&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;checkbox&amp;#34;&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;vue3.5&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Math&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The above code works fine when rendered on the client side, but will trigger a warning in server-side rendering due to differing ID values, generating a &lt;code>Hydration attribute mismatch&lt;/code> warning.&lt;/p>
&lt;p>Why is an ID generated on the server and then again on the client?&lt;/p>
&lt;p>To answer this, we need to understand the server-side rendering (SSR) process:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>First, a request is made on the server (Node.js environment) to fetch the data needed to render the page.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Based on the received data, the server generates the HTML string, generating an ID in this step, called dehydration.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The server-generated HTML string is sent to the client (browser).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The browser receives this HTML string and renders it as the initial content. However, at this point, click events have not yet been bound to the DOM, so the client needs to render again, generating an ID once more, called hydration.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Since we used &lt;code>Math.random()&lt;/code> to generate the ID, the IDs generated on the server and client will differ, leading to the warning mentioned above.&lt;/p>
&lt;p>With &lt;code>useId&lt;/code>, resolving this warning becomes simple: just replace &lt;code>Math.random()&lt;/code> with &lt;code>useId()&lt;/code>.&lt;/p>
&lt;p>This is because &lt;code>useId&lt;/code> will generate &lt;code>v-0&lt;/code> during server-side rendering and will still be &lt;code>v-0&lt;/code> during client rendering.&lt;/p>
&lt;p>Some may wonder, didn’t we just say that &lt;code>useId&lt;/code> increments the number each time it is executed? Shouldn’t the IDs generated on the server and client be different after executing once on the server and then once on the client?&lt;/p>
&lt;p>The incrementing part generated by &lt;code>useId&lt;/code> is maintained in the ids property of the Vue instance. During server-side rendering, a Vue instance is created on the Node.js side. However, a new Vue instance is created in the browser for client rendering, resetting the ids property. Therefore, the IDs generated by useId on the server and client are the same.&lt;/p></description></item><item><title>12 Vue 3 Backend Management Templates to Bookmark and Learn</title><link>https://www.skstory.online/p/12-vue-3-backend-management-templates-to-bookmark-and-learn/</link><pubDate>Tue, 29 Oct 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/12-vue-3-backend-management-templates-to-bookmark-and-learn/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*u483g0dL7NmbtDvGH817bg.png" alt="Featured image of post 12 Vue 3 Backend Management Templates to Bookmark and Learn" />&lt;h2 id="1-vben-admin">1. Vben Admin
&lt;/h2>&lt;p>Vben Admin is a backend solution based on Vue 3.0, Vite, and TypeScript, aimed at providing an out-of-the-box solution for developing medium to large-scale projects. It includes features like component re-encapsulation, utilities, hooks, dynamic menus, permission validation, multi-theme configurations, and button-level permission control. The project uses the latest frontend technology stack, making it a good starting template for quickly building enterprise-level mid- to backend product prototypes. It can also serve as an example for learning vue3, vite, ts, and other mainstream technologies. The project will continue to follow the latest technologies and apply them within the project.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*CehqYoLpAtHAmKcQLQbUYQ.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Latest Technology Stack&lt;/strong>: Developed using cutting-edge frontend technologies like Vue 3, Vite, and TypeScript.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Internationalization&lt;/strong>: Built-in comprehensive internationalization solutions with multi-language support.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Permission Validation&lt;/strong>: Comprehensive permission validation solutions, including button-level permission control.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Multi-Theme&lt;/strong>: Built-in multiple theme configurations &amp;amp; dark mode to meet personalized needs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Dynamic Menu&lt;/strong>: Supports dynamic menus that can display based on permissions.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Mock Data&lt;/strong>: High-performance local Mock data solution based on Nitro.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Rich Components&lt;/strong>: Provides a wide range of components to meet most business needs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Standardization&lt;/strong>: Code quality is ensured with tools like ESLint, Prettier, Stylelint, Publint, and CSpell.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Engineering&lt;/strong>: Development efficiency is improved with tools like Pnpm Monorepo, TurboRepo, and Changeset.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Multi-UI Library Support&lt;/strong>: Supports mainstream UI libraries like Ant Design Vue, Element Plus, and Vuetify, without being restricted to a specific framework.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Document Link - &lt;a class="link" href="https://doc.vben.pro/en/" target="_blank" rel="noopener"
>https://doc.vben.pro/en/&lt;/a>&lt;/p>
&lt;p>Preview Link - &lt;a class="link" href="https://www.vben.pro/#/analytics" target="_blank" rel="noopener"
>https://www.vben.pro/#/analytics&lt;/a>&lt;/p>
&lt;h2 id="2-naive-ui-admin">2. Naive Ui Admin
&lt;/h2>&lt;p>A ready-to-use front-end solution for middle and backend systems based on Vue 3, Vite 2, TypeScript, and the Naive UI component library.&lt;/p>
&lt;p>Naive UI Admin adheres to the design and development conventions of the Naive UI component library, ensuring a consistent style. It utilizes the latest front-end technology stack and distills typical business models and pages, including secondary encapsulation components, dynamic menus, permission verification, and granular permission control. It can help you quickly build enterprise-level middle and backend projects.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*K5go4Nr5ZlvQv8IhTfhwGw.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>A ready-to-use middle and backend framework that allows you to write less code.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Provides out-of-the-box enterprise-level front and back-end products, saving significant time for direct business development.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Multi-ecosystem support: offers multiple UI ecosystem support for enterprise products, optimizing development costs for both new and legacy projects, enabling rapid deployment.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>True out-of-the-box usability in terms of framework level, business level, and page extensibility/composability, making it easy for beginners to get started.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Practical templates: extracts highly practical and general page designs from numerous systems and businesses, allowing for the easy construction of standardized and aesthetically pleasing systems.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Document Link - &lt;a class="link" href="https://docs.naiveadmin.com/" target="_blank" rel="noopener"
>https://docs.naiveadmin.com/&lt;/a>&lt;/p>
&lt;p>Preview Link - &lt;a class="link" href="https://plus.naiveadmin.com/dashboard/console" target="_blank" rel="noopener"
>https://plus.naiveadmin.com/dashboard/console&lt;/a>&lt;/p>
&lt;p>Github Link - &lt;a class="link" href="https://github.com/jekip/naive-ui-admin" target="_blank" rel="noopener"
>https://github.com/jekip/naive-ui-admin&lt;/a>&lt;/p>
&lt;h2 id="3-vue-admin-better">3. vue-admin-better
&lt;/h2>&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*w1hIGwkuIk4QwgH4WjwR_A.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>40 + high quality single page&lt;/p>
&lt;/li>
&lt;li>
&lt;p>RBAC model + JWT permission control&lt;/p>
&lt;/li>
&lt;li>
&lt;p>100,000 + project practical application&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Good type definition&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Open source version supports free commercial use&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Cross-platform PC, mobile, tablet&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Dynamic rendering of back-end routes&lt;/p>
&lt;/li>
&lt;li>
&lt;p>More than 50 items are configured globally&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Supports mock automatic generation and automatic export&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Preview Link - &lt;a class="link" href="https://plus.naiveadmin.com/dashboard/console" target="_blank" rel="noopener"
>https://plus.naiveadmin.com/dashboard/console&lt;/a>&lt;/p>
&lt;p>Github Link - &lt;a class="link" href="https://github.com/zxwk1998/vue-admin-better" target="_blank" rel="noopener"
>https://github.com/zxwk1998/vue-admin-better&lt;/a>&lt;/p>
&lt;h2 id="4-vue-pure-admin">4. vue-pure-admin
&lt;/h2>&lt;p>vue-pure-admin is an open-source, completely free, and ready-to-use middle and backend management system template. It is fully written and organized according to the ECMAScript Module (ESM) specification, utilizing the latest mainstream technologies such as Vue 3, Vite, Element-Plus, TypeScript, Pinia, and Tailwind CSS. It offers various versions including a full version, a streamlined version, a JS version, a max version, a micro-frontend version, a Tauri version, and an Electron version.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*-1sKeMuj25cEBYEf-RMidQ.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Latest Technology Stack&lt;/strong>: Developed using the latest technologies such as Vue 3, Vite, Element-Plus, TypeScript, Pinia, and Tailwind CSS while maintaining stability.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Fast Hot Reloading and Optimized Packaging&lt;/strong>: Provides extremely fast module hot reloading (HMR) regardless of application size, with a complete built-in packaging optimization scheme.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Easy to Get Started with Rich Components and Utility Functions&lt;/strong>: Uses single-file component syntax, providing many rich out-of-the-box components and utility libraries.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Streamlined Version with Permanent Synchronization&lt;/strong>: Offers both internationalized and non-internationalized streamlined versions, with packaging sizes under 350kb when Brotli compression and CDN replacement for local libraries are enabled.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Highly Configurable Theme and Four Menu Layouts&lt;/strong>: Features a highly configurable theme and dark mode support, offering four types of menu layouts: left, top, mixed, and dual-column.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>RBAC Permission Management with Granular Control&lt;/strong>: Utilizes the commonly used RBAC (Role-Based Access Control) model (User -&amp;gt; Role -&amp;gt; Permission), allowing for configurable granular permissions.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Document Link - &lt;a class="link" href="https://pure-admin.github.io/pure-admin-doc/" target="_blank" rel="noopener"
>https://pure-admin.github.io/pure-admin-doc/&lt;/a>&lt;/p>
&lt;p>Preview Link - &lt;a class="link" href="https://pure-admin.github.io/vue-pure-admin/#/welcome" target="_blank" rel="noopener"
>https://pure-admin.github.io/vue-pure-admin/#/welcome&lt;/a>&lt;/p>
&lt;p>Github Link - &lt;a class="link" href="https://github.com/zxwk1998/vue-admin-better" target="_blank" rel="noopener"
>https://github.com/zxwk1998/vue-admin-better&lt;/a>&lt;/p>
&lt;h2 id="5-soybean-admin">5. soybean-admin
&lt;/h2>&lt;p>A clean, elegant, beautiful and powerful admin template, based on Vue3, Vite5, TypeScript, Pinia, NaiveUI and UnoCSS.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*FFqLPtpDwvmbB93Y8fUF0g.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Cutting-edge technology application&lt;/strong>: using the latest popular technology stack such as Vue3, Vite5, TypeScript, Pinia and UnoCSS.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Clear project architecture&lt;/strong>: using pnpm monorepo architecture, clear structure, elegant and easy to understand.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Strict code specifications&lt;/strong>: follow the SoybeanJS specification, integrate eslint, prettier and simple-git-hooks to ensure the code is standardized.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>TypeScript&lt;/strong>: support strict type checking to improve code maintainability.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Rich theme configuration&lt;/strong>: built-in a variety of theme configurations, perfectly integrated with UnoCSS.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Built-in internationalization solution&lt;/strong>: easily realize multi-language support.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Automated file routing system&lt;/strong>: automatically generate route import, declaration and type. For more details, please refer to Elegant Router.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Flexible permission routing&lt;/strong>: support both front-end static routing and back-end dynamic routing.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Rich page components&lt;/strong>: built-in a variety of pages and components, including 403, 404, 500 pages, as well as layout components, tag components, theme configuration components, etc.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Command line tool&lt;/strong>: built-in efficient command line tool, git commit, delete file, release, etc.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Mobile adaptation&lt;/strong>: perfectly support mobile terminal to realize adaptive layout.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Document Link - &lt;a class="link" href="https://pure-admin.github.io/pure-admin-doc/" target="_blank" rel="noopener"
>https://pure-admin.github.io/pure-admin-doc/&lt;/a>&lt;/p>
&lt;p>Preview Link - &lt;a class="link" href="https://antd.soybeanjs.cn/home" target="_blank" rel="noopener"
>https://antd.soybeanjs.cn/home&lt;/a>&lt;/p>
&lt;p>Github Link - &lt;a class="link" href="https://github.com/soybeanjs/soybean-admin" target="_blank" rel="noopener"
>https://github.com/soybeanjs/soybean-admin&lt;/a>&lt;/p>
&lt;h2 id="6-geeker-admin">6. Geeker-Admin
&lt;/h2>&lt;p>Geeker-Admin is an open-source backend management framework based on Vue 3.4, TypeScript, Vite 5, Pinia, and Element-Plus, developed using the latest technology stack. The project provides a powerful ProTable component, which enhances your development efficiency to a certain extent. Additionally, it encapsulates several commonly used components, hooks, directives, dynamic routing, and button-level permission control features.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*euaDQ_XZ7r94ZEgIcU1NQQ.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>Project Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Development with Vue 3.4 + TypeScript&lt;/strong>: Utilizes single-file components with &lt;code>&amp;lt;script setup&amp;gt;&lt;/code> syntax.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Vite 5 as Development and Packaging Tool&lt;/strong>: Configures gzip/Brotli packaging, TSX syntax, and cross-origin proxy support.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Pinia Instead of Vuex&lt;/strong>: Lightweight, simple, and easy to use, with integrated Pinia persistence plugin.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>TypeScript Wrapper for Axios&lt;/strong>: Comprehensive second-layer encapsulation of Axios (request interception, cancellation, common request encapsulation, etc.).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>ProTable Component Based on Element&lt;/strong>: All table pages are configured with Columns, enhancing flexibility.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Support for Element Component Size Switching&lt;/strong>: Offers multi-theme layouts, dark mode, and i18n internationalization.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Dynamic Routing Permission Control with VueRouter&lt;/strong>: Configures dynamic route permission interception and lazy loading, supporting page-level button permission control.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>KeepAlive for Page Caching&lt;/strong>: Supports multi-level nested route caching.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Development of Common Custom Directives&lt;/strong>: Includes directives for permissions, copying, watermarking, dragging, throttling, debouncing, and long presses.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Unified Code Formatting with Prettier&lt;/strong>: Integrates ESLint and Stylelint for code validation standards.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Use of Husky, Lint-Staged, Commitlint, Czg, and Cz-Git&lt;/strong>: Standardizes commit messages.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Preview Link - &lt;a class="link" href="https://admin.spicyboy.cn" target="_blank" rel="noopener"
>https://admin.spicyboy.cn&lt;/a>&lt;/p>
&lt;p>Github Link - &lt;a class="link" href="https://github.com/HalseySpicy/Geeker-Admin/" target="_blank" rel="noopener"
>https://github.com/HalseySpicy/Geeker-Admin/&lt;/a>&lt;/p>
&lt;h2 id="7-v3-admin-vite">7. v3-admin-vite
&lt;/h2>&lt;p>V3 Admin Vite is a free and open source middle and background management system basic solution, based on mainstream framework such as Vue3, TypeScript, Element Plus, Pinia and Vite.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*UU-xDeqUUxEwg3_bqMHIdw.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Very concise&lt;/strong>：No complicated encapsulation, no complicated type gymnastics, out of the box&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Detailed annotations&lt;/strong>：Each configuration item is written with as detailed comments as possible&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Latest dependencies&lt;/strong>: Regularly update all third-party dependencies to the latest version&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Very specification&lt;/strong>: The code style is unified, the naming style is unified, and the comment style is unified&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>User management&lt;/strong>: Log in and out of the demo&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Authority management&lt;/strong>: Page-level permissions (dynamic routing), button-level permissions (directive permissions, permission functions), and route navigation guards&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Multiple Environments&lt;/strong>: Development, Staging, Production&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Multiple themes&lt;/strong>: Normal, Dark, Dark Blue, three theme modes&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Multiple layouts&lt;/strong>：Left, Top, Left Top, three layout modes&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Error page&lt;/strong>: 403, 404&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Dashboard&lt;/strong>: Display different Dashboard pages according to different users&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Other functions&lt;/strong>：SVG, Dynamic Sidebar, Dynamic Breadcrumb Navigation, Tabbed Navigation, Screenfull, Adaptive Shrink Sidebar, Hook (Composables)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Preview Link - &lt;a class="link" href="https://un-pany.github.io/v3-admin-vite/#/dashboard" target="_blank" rel="noopener"
>https://un-pany.github.io/v3-admin-vite/#/dashboard&lt;/a>&lt;/p>
&lt;p>Github Link - &lt;a class="link" href="https://github.com/un-pany/v3-admin-vite" target="_blank" rel="noopener"
>https://github.com/un-pany/v3-admin-vite&lt;/a>&lt;/p>
&lt;h2 id="8-coreui-free-vue-admin-template">8. coreui-free-vue-admin-template
&lt;/h2>&lt;p>CoreUI is a standalone, reliable, free Vue management template that provides a perfect foundation for enterprise-level development. It is based on Bootstrap 5 and Vue 3, offering lightweight code that is responsive and cross-browser compatible, supporting both light and dark modes, along with detailed documentation and long-term support.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*lqUuoIZaXy3Ltg139dQYfw.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Create Beautiful, Responsive Applications Without Design Skills&lt;/strong>: No design expertise required.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Open Source with Enterprise-Level Support&lt;/strong>: Enjoy the benefits of both open-source and commercial products.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Easy Customization of Appearance and Functionality&lt;/strong>: Customize without delving into complex code.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>A Wealth of Common UI Components, Tools, and Plugins Ready to Use&lt;/strong>: Out-of-the-box components for rapid development.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Quickly Start New Projects&lt;/strong>: Save time on environment setup.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Document Link - &lt;a class="link" href="https://coreui.io/product/free-vue-admin-template/" target="_blank" rel="noopener"
>https://coreui.io/product/free-vue-admin-template/&lt;/a>&lt;/p>
&lt;p>Preview Link - &lt;a class="link" href="https://coreui.io/demos/vue/5.0/free/?theme=light#/dashboard" target="_blank" rel="noopener"
>https://coreui.io/demos/vue/5.0/free/?theme=light#/dashboard&lt;/a>&lt;/p>
&lt;p>Github Link - &lt;a class="link" href="https://github.com/coreui/coreui-free-vue-admin-template" target="_blank" rel="noopener"
>https://github.com/coreui/coreui-free-vue-admin-template&lt;/a>&lt;/p>
&lt;h2 id="9-materio-vuetify-vuejs-admin-template-free">9. materio-vuetify-vuejs-admin-template-free
&lt;/h2>&lt;p>Production Ready, Carefully Crafted, Extensive Vuetifty Free Admin Template&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*y1IbGomhpyNbUUbUjVZolA.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Vue 3, Vite 3 &amp;amp; Vuetify 3 - Uses the latest Vuetify 3&lt;/p>
&lt;/li>
&lt;li>
&lt;p>File based routing&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Components auto importing&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Layout system&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use icons from any icon sets with classes by Iconify&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I18n ready&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use the &lt;code>&amp;lt;script setup&amp;gt;&lt;/code> syntax&lt;/p>
&lt;/li>
&lt;li>
&lt;p>APIs auto importing - use Composition API and others directly&lt;/p>
&lt;/li>
&lt;li>
&lt;p>TypeScript &amp;amp; JavaScript versions&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Document Link - &lt;a class="link" href="https://demos.themeselection.com/materio-vuetify-vuejs-admin-template/documentation/" target="_blank" rel="noopener"
>https://demos.themeselection.com/materio-vuetify-vuejs-admin-template/documentation/&lt;/a>&lt;/p>
&lt;p>Preview Link - &lt;a class="link" href="https://demos.themeselection.com/materio-vuetify-vuejs-admin-template-free/demo/dashboard" target="_blank" rel="noopener"
>https://demos.themeselection.com/materio-vuetify-vuejs-admin-template-free/demo/dashboard&lt;/a>&lt;/p>
&lt;p>Github Link - &lt;a class="link" href="https://github.com/themeselection/materio-vuetify-vuejs-admin-template-free" target="_blank" rel="noopener"
>https://github.com/themeselection/materio-vuetify-vuejs-admin-template-free&lt;/a>&lt;/p>
&lt;h2 id="10-vuestic-admin">10. Vuestic Admin
&lt;/h2>&lt;p>Vuestic Admin is an open-source, ready-to-use admin template suite designed for rapid development, easy maintenance, and high accessibility. Built on Vuestic UI, Vue 3, Vite, Pinia, and Tailwind CSS.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*LbZ0uruve0pShncX0BFPpQ.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Vue 3, Vite, Pinia, and Tailwind CSS - Fast and efficient development&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Dark Theme - Modern and eye-catching&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Global Configuration - Effortless customization&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Accessibility - Inclusive and user-friendly&lt;/p>
&lt;/li>
&lt;li>
&lt;p>i18n Integration - Easy localization for global reach&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Educational Resource - Ideal for learning and improving skills&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Responsive Design - Adapts seamlessly to all devices&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Professional Support - Reliable help from the experts&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Highly Customizable - Tailor to your project’s style&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Document Link - &lt;a class="link" href="https://ui.vuestic.dev/" target="_blank" rel="noopener"
>https://ui.vuestic.dev/&lt;/a>&lt;/p>
&lt;p>Preview Link - &lt;a class="link" href="https://admin-demo.vuestic.dev/dashboard" target="_blank" rel="noopener"
>https://admin-demo.vuestic.dev/dashboard&lt;/a>&lt;/p>
&lt;p>Github Link - &lt;a class="link" href="https://github.com/epicmaxco/vuestic-admin" target="_blank" rel="noopener"
>https://github.com/epicmaxco/vuestic-admin&lt;/a>&lt;/p>
&lt;h2 id="11-lux-ui">11. lux-ui
&lt;/h2>&lt;p>Create the best admin based on Vue3.x, Vite5.x, TypeScript, Vuetify3.x, Chat GPT&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*1O0meSivQAUjgfb3IPHS4Q.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Vue 3.2&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Vite 4.x&lt;/p>
&lt;/li>
&lt;li>
&lt;p>UI Framework Vuetify 3&lt;/p>
&lt;/li>
&lt;li>
&lt;p>TypeScript&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Component Auto Importing&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Pinia&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>&amp;lt;script setup&amp;gt;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use icons from any icon sets in Iconify&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Deploy on Netlify, zero-config&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Firebase auth&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Echarts, ApexChart&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Openai, Chatgpt&lt;/p>
&lt;/li>
&lt;li>
&lt;p>vue-i18n&lt;/p>
&lt;/li>
&lt;li>
&lt;p>virtual-scroller , vuedraggable , perfect-scrollbar&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rich Text Editor&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Responsive multi-platform adaptive&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Document Link - &lt;a class="link" href="https://worlds-yawn-cc0.craft.me/tAMVv4hUxZIH6G" target="_blank" rel="noopener"
>https://worlds-yawn-cc0.craft.me/tAMVv4hUxZIH6G&lt;/a>&lt;/p>
&lt;p>Preview Link - &lt;a class="link" href="https://lux.vuetify3.com/dashboard" target="_blank" rel="noopener"
>https://lux.vuetify3.com/dashboard&lt;/a>&lt;/p>
&lt;p>Github Link - &lt;a class="link" href="https://github.com/yangjiakai/lux-ui" target="_blank" rel="noopener"
>https://github.com/yangjiakai/lux-ui&lt;/a>&lt;/p>
&lt;h2 id="12-gin-vue-admin">12. gin-vue-admin
&lt;/h2>&lt;p>Vite + Vue 3 + Gin provides a foundational development platform enhanced by AI, supporting a mix of TypeScript and JavaScript. It integrates essential development features such as JWT authentication, permission management, dynamic routing, controllable component visibility, pagination encapsulation, multi-point login interception, resource permissions, file uploading and downloading, code generation, form generation, and configurable import/export functionalities.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*P0fthXklg8RdFtbnhfkTCA.jpeg"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Plugin Center NEW&lt;/strong>: Based on GVA&amp;rsquo;s unique design style, it features a proprietary plugin center that currently supports plugins for WeChat payments, login, K8s-related operations, third-party logins, and more.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Permission Management&lt;/strong>: Implemented using JWT and Casbin for managing permissions.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>File Uploading and Downloading&lt;/strong>: Supports file uploads and downloads from local systems, Qiniu Cloud, Alibaba Cloud, and Tencent Cloud.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>User Management&lt;/strong>: System administrators can assign user roles and permissions.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Role Management&lt;/strong>: Create the main objects for permission control, allowing different API permissions, menu permissions, and button permissions to be assigned to roles.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Menu Management&lt;/strong>: Enables dynamic menu configuration for users, managing button permissions to provide different menus for different roles.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>API Management&lt;/strong>: Different users can have varying permissions for accessing API endpoints.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Configuration Management&lt;/strong>: Configuration files can be modified from the frontend (this feature is not available in the testing environment).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Rich Text Editor&lt;/strong>: Embeds a Markdown editor functionality.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Conditional Search&lt;/strong>: Adds examples for conditional searching.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>RESTful Examples&lt;/strong>: Provides sample APIs that can be referenced in the user management module.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Multi-Point Login Restriction&lt;/strong>: Requires setting &lt;code>useMultipoint&lt;/code> to true in &lt;code>config.yaml&lt;/code> (Redis and Config parameters must be configured manually; please report any bugs during the testing phase).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Chunked Uploads&lt;/strong>: Provides examples for file chunk uploads and large file chunk uploads.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Form Generator&lt;/strong>: Utilizes Variant Form for form generation.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Code Generator&lt;/strong>: Generates foundational logic for the backend along with simple CRUD code.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Document Link - &lt;a class="link" href="https://www.gin-vue-admin.com/" target="_blank" rel="noopener"
>https://www.gin-vue-admin.com/&lt;/a>&lt;/p>
&lt;p>Preview Link - &lt;a class="link" href="https://demo.gin-vue-admin.com/#/layout/dashboard" target="_blank" rel="noopener"
>https://demo.gin-vue-admin.com/#/layout/dashboard&lt;/a>&lt;/p>
&lt;p>Github Link - &lt;a class="link" href="https://github.com/flipped-aurora/gin-vue-admin" target="_blank" rel="noopener"
>https://github.com/flipped-aurora/gin-vue-admin&lt;/a>&lt;/p></description></item><item><title>Usage and Differences of ?., !., and ?? in JavaScript</title><link>https://www.skstory.online/p/usage-and-differences-of-.-.-and-in-javascript/</link><pubDate>Tue, 29 Oct 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/usage-and-differences-of-.-.-and-in-javascript/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1372/format:webp/1*6VMwfpFr7bDv_qeLHsk_dA.jpeg" alt="Featured image of post Usage and Differences of ?., !., and ?? in JavaScript" />&lt;p>In JavaScript, &lt;code>?.&lt;/code>, &lt;code>!.&lt;/code>, and &lt;code>??&lt;/code> are three different operators, each with its own purpose to enhance code simplicity and safety, especially when dealing with possible null or undefined values. Below is an explanation of each operator:&lt;/p>
&lt;h2 id="optional-chaining-operator-">Optional Chaining Operator ?.
&lt;/h2>&lt;p>&lt;strong>Usage&lt;/strong>: &lt;code>obj?.prop&lt;/code> or &lt;code>obj?.[expr]&lt;/code>&lt;/p>
&lt;p>&lt;strong>Function&lt;/strong>: When accessing a deeply nested property, if the object &lt;code>obj&lt;/code> is &lt;code>null&lt;/code> or &lt;code>undefined&lt;/code>, the &lt;code>?.&lt;/code> operator prevents an error from being thrown and instead returns &lt;code>undefined&lt;/code>, avoiding errors from trying to access non-existent properties.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="n">Outputs&lt;/span> &lt;span class="n">undefined&lt;/span> &lt;span class="n">instead&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">throwing&lt;/span> &lt;span class="n">an&lt;/span> &lt;span class="n">error&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="non-null-assertion-operator-">Non-Null Assertion Operator !.
&lt;/h2>&lt;p>&lt;strong>Usage&lt;/strong>: &lt;code>obj!.prop&lt;/code>&lt;/p>
&lt;p>&lt;strong>Function&lt;/strong>: This operator tells the TypeScript compiler that you are sure the expression will never be &lt;code>null&lt;/code> or &lt;code>undefined&lt;/code>, thus avoiding warnings during type checking. Note that this only affects compile-time type checking and does not change runtime behavior, so if the expression is actually &lt;code>null&lt;/code> or &lt;code>undefined&lt;/code>, it will still result in a runtime error.&lt;/p>
&lt;p>Example: (Assumes a TypeScript environment)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">let user: User | null = fetchUserData();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">console.log(user!.name); // Tells TypeScript you&amp;#39;re sure user is not null or undefined
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="nullish-coalescing-operator-">Nullish Coalescing Operator ??
&lt;/h2>&lt;p>&lt;strong>Usage&lt;/strong>: &lt;code>value ?? fallback&lt;/code>&lt;/p>
&lt;p>&lt;strong>功能&lt;/strong>: Returns the &lt;code>fallback&lt;/code> value if value is &lt;code>null&lt;/code> or &lt;code>undefined&lt;/code>; otherwise, it returns &lt;code>value&lt;/code> itself. This differs from the logical OR &lt;code>||&lt;/code> operator, which returns &lt;code>fallback&lt;/code> if &lt;code>value&lt;/code> is any falsy value (such as 0, false, an empty string, etc.), whereas &lt;code>??&lt;/code> only replaces &lt;code>value&lt;/code> when it is strictly &lt;code>null&lt;/code> or &lt;code>undefined&lt;/code>.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">let&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="err">??&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="mi">42&lt;/span> &lt;span class="n">because&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">null&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In summary, &lt;code>?.&lt;/code> helps safely access object properties, &lt;code>!.&lt;/code> is used to tell the TypeScript compiler to ignore possible &lt;code>null&lt;/code> or &lt;code>undefined&lt;/code> checks (ensure safety when using it), and &lt;code>??&lt;/code> provides an alternative value when the original is &lt;code>null&lt;/code> or &lt;code>undefined&lt;/code>.&lt;/p></description></item><item><title>I Feel Like I Haven't Learned the split Method Properly</title><link>https://www.skstory.online/p/i-feel-like-i-havent-learned-the-split-method-properly/</link><pubDate>Mon, 28 Oct 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/i-feel-like-i-havent-learned-the-split-method-properly/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1372/format:webp/1*LlqGR3DjTu_f9ApsWxZ2lQ.jpeg" alt="Featured image of post I Feel Like I Haven't Learned the split Method Properly" />&lt;p>Friends, can you use the &lt;code>split&lt;/code> method in JavaScript? I recently realized that I haven&amp;rsquo;t been using it correctly for years, which caused me to get stuck on a problem while solving challenges. Today, I must document this.&lt;/p>
&lt;p>Before discussing the problem, let&amp;rsquo;s review the two basic uses of &lt;code>split&lt;/code>.&lt;/p>
&lt;h2 id="character-parameter">Character Parameter
&lt;/h2>&lt;p>The &lt;code>split&lt;/code> method is used for string splitting, and the most common form is using a specific character to split the original string. For example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#39;as:st:vii&amp;#39;.split(&amp;#39;:&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// [&amp;#39;as&amp;#39;, &amp;#39;st&amp;#39;, &amp;#39;vii&amp;#39;]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Using &lt;code>:&lt;/code> to split the original string results in an array. This is the usage most people are familiar with.&lt;/p>
&lt;h2 id="regex-parameter">Regex Parameter
&lt;/h2>&lt;p>Sometimes splitting isn&amp;rsquo;t done by a specific character but by a class of characters, like numbers:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#39;as2st3vii&amp;#39;.split(/\d/)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// [&amp;#39;as&amp;#39;, &amp;#39;st&amp;#39;, &amp;#39;vii&amp;#39;]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The regex &lt;code>\d&lt;/code> represents all digits, treating any digit as a separator, which is very flexible.&lt;/p>
&lt;h2 id="problem-one">Problem One
&lt;/h2>&lt;p>So why do I say I haven&amp;rsquo;t learned it properly? Look at the following code:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="o">`&lt;/span>&lt;span class="n">asabstcdvii&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ab&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">cd&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Think about the result. If you think it returns &lt;code>['as', 'st', 'vii']&lt;/code>, you should reconsider.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">// [&amp;#39;as&amp;#39;, &amp;#39;ab&amp;#39;, &amp;#39;st&amp;#39;, &amp;#39;cd&amp;#39;, &amp;#39;vii&amp;#39;]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This is the correct result, including the separators &lt;code>ab&lt;/code> and &lt;code>cd&lt;/code> in the output. If you got it right, congratulations. If not, remember that &lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split" target="_blank" rel="noopener"
>MDN&lt;/a> is a great resource.&lt;/p>
&lt;blockquote>
&lt;p>If the separator is a regular expression with &lt;strong>capturing groups&lt;/strong>, then each time the separator matches, the captured groups (including any undefined results) are spliced into the output array.&lt;/p>
&lt;/blockquote>
&lt;p>To explain simply, if there are &lt;strong>capturing groups&lt;/strong> in the regex, their contents will also be included in the result array.&lt;/p>
&lt;p>If we modify the regex to be a bit more complex:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="o">`&lt;/span>&lt;span class="n">asabstcdvii&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;as&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;st&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;d&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;vii&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can see that all &lt;strong>capturing groups&lt;/strong> in the regex are returned in the result array.&lt;/p>
&lt;p>What is this feature useful for? I haven&amp;rsquo;t found a real-world application since I didn&amp;rsquo;t know about it before. Here&amp;rsquo;s a contrived example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">addYear&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">date&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">arr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-|&lt;/span>\&lt;span class="o">/&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Number&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If the date string separator could be &lt;code>-&lt;/code> or &lt;code>/&lt;/code>, using &lt;strong>capturing groups&lt;/strong> allows you to easily identify the original separator after splitting.&lt;/p>
&lt;h2 id="problem-two">Problem Two
&lt;/h2>&lt;p>Wait, there&amp;rsquo;s more. The &lt;code>split&lt;/code> method also supports a second parameter, &lt;code>limit&lt;/code>, which restricts the length of the resulting array.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="o">`&lt;/span>&lt;span class="n">asabstcdvii&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;as&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>When this parameter is provided, the split method will split the string at each occurrence of the separator, but will stop once there are limit elements. Any remaining text won&amp;rsquo;t be included in the array.&lt;/p></description></item><item><title>Understanding the Differences and Usage of >>>, /deep/, ::v-deep, ::v-deep(), and :deep()</title><link>https://www.skstory.online/p/understanding-the-differences-and-usage-of-/deep/-v-deep-v-deep-and-deep/</link><pubDate>Thu, 24 Oct 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/understanding-the-differences-and-usage-of-/deep/-v-deep-v-deep-and-deep/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*ryyF1WQUm5ucyfjGRIrIlg.jpeg" alt="Featured image of post Understanding the Differences and Usage of >>>, /deep/, ::v-deep, ::v-deep(), and :deep()" />&lt;p>In Vue projects, especially when using component-based development, there are times when you need to optimize styles within components. However, Vue&amp;rsquo;s scoped styling feature prevents external styles from directly affecting the internals of a component. To address this, the Vue community introduced deep selectors (also known as piercing or shadow-piercing selectors) that allow you to cross component boundaries and style internal elements.&lt;/p>
&lt;p>Deep selectors enable you to penetrate from parent components into child components and directly modify their styles. This is particularly useful when customizing styles for third-party UI library components.&lt;/p>
&lt;h2 id="heading">&amp;raquo;&amp;gt;
&lt;/h2>&lt;p>&lt;code>&amp;gt;&amp;gt;&amp;gt;&lt;/code> is a native CSS deep selector syntax used to penetrate style encapsulation.&lt;/p>
&lt;p>Compatibility: Only works in certain environments (like specific Webpack css-loader configurations) and native CSS. Typically requires specific configuration in Vue single-file components.
Note: In Vue single-file components, we usually use CSS preprocessors. However, preprocessors like Sass cannot correctly parse &lt;code>&amp;gt;&amp;gt;&amp;gt;,&lt;/code> so it&amp;rsquo;s not recommended. Instead, use /deep/ or ::v-deep, which are aliases and work correctly.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;style scoped&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.parent &amp;gt;&amp;gt;&amp;gt; .child {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/style&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="deep">/deep/
&lt;/h2>&lt;p>&lt;code>/deep/&lt;/code>was once proposed in CSS but was later removed, so it&amp;rsquo;s not recommended.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Compatibility&lt;/strong>: Supports CSS preprocessors (like Sass, Less) and native CSS.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Note&lt;/strong>: In Vue 3, &lt;code>/deep/&lt;/code> is no longer officially supported. Some build tools or libraries might still be compatible, but its use will generate warnings during compilation.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>/deep/&lt;/code> usage as a combinator has been deprecated. Use &lt;code>:deep()&lt;/code> instead.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;style scoped&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.parent /deep/ .child {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/style&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="v-deep">::v-deep
&lt;/h2>&lt;p>  
&lt;code>::v-deep&lt;/code>is an alias for the &lt;code>/deep/&lt;/code> deep selector.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Compatibility&lt;/strong>: Supported in Vue 2, but not recommended in Vue 3.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Note&lt;/strong>: In Vue 3, &lt;code>::v-deep&lt;/code> is also no longer officially supported. Its use will generate warnings during compilation.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>::v-deep&lt;/code> usage as a combinator has been deprecated. Use :deep() instead.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;style scoped&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.parent::v-deep .child {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/style&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="v-deep-1">::v-deep()
&lt;/h2>&lt;p>&lt;code>::v-deep()&lt;/code>is a transitional combinator from Vue 2 to Vue 3.&lt;/p>
&lt;p>&lt;strong>Usage&lt;/strong>: Supported in Vue 3, but considered deprecated and will trigger warnings during compilation.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;style scoped&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.parent ::v-deep(.child) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/style&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="deep-1">:deep()
&lt;/h2>&lt;p>  
&lt;code>:deep()&lt;/code>is the officially recommended deep selector in Vue 3. The use of &lt;code>&amp;gt;&amp;gt;&amp;gt;&lt;/code>, &lt;code>/deep/&lt;/code>, &lt;code>::v-deep&lt;/code>, and &lt;code>::v-deep()&lt;/code> is discouraged.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Compatibility&lt;/strong>: Supported in Vue 3, not usable in Vue 2.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Documentation&lt;/strong>: &lt;a class="link" href="%28https://cn.vuejs.org/api/sfc-css-features#style-scoped%29" >Vue.js SFC CSS Features&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;style scoped&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.parent :deep(.child) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/style&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="evolution">Evolution
&lt;/h2>&lt;p>  
Sometimes we may want to explicitly make a rule target child components.&lt;/p>
&lt;p>Originally we supported the &amp;raquo;&amp;gt; combinator to make the selector &amp;ldquo;deep&amp;rdquo;. However, some CSS pre-processors such as SASS has issues parsing it since this is not an official CSS combinator.&lt;/p>
&lt;p>We later switched to /deep/, which was once an actual proposed addition to CSS (and even natively shipped in Chrome), but later dropped. This caused confusion for some users, since they worry that using /deep/ in Vue SFCs would make their code not supported in browsers that have dropped the feature. However, just like &amp;raquo;&amp;gt;, /deep/ is only used as a compile-time hint by Vue&amp;rsquo;s SFC compiler to rewrite the selector, and is removed in the final CSS.&lt;/p>
&lt;p>To avoid the confusion of the dropped /deep/ combinator, we introduced yet another custom combinator, ::v-deep, this time being more explicit that this is a Vue-specific extension, and using the pseudo-element syntax so that any pre-processor should be able to parse it.&lt;/p>
&lt;p>The previous versions of the deep combinator are still supported for compatibility reasons in the current Vue 2 SFC compiler, which again, can be confusing to users. In v3, we are deprecating the support for &amp;raquo;&amp;gt; and /deep/.&lt;/p>
&lt;p>As we were working on the new SFC compiler for v3, we noticed that CSS pseudo elements are in fact semantically NOT combinators. It is more consistent with idiomatic CSS for pseudo elements to accept arguments instead, so we are also making ::v-deep() work that way. The current usage of ::v-deep as a combinator is still supported, however it is considered deprecated and will raise a warning.&lt;/p>
&lt;p>以上内容来自：https://github.com/vuejs/rfcs/blob/scoped-styles-changes/active-rfcs/0023-scoped-styles-changes.md#deep-selectors&lt;/p>
&lt;p>&lt;code>&amp;gt;&amp;gt;&amp;gt;&lt;/code> → &lt;code>/deep/&lt;/code> → &lt;code>::v-deep&lt;/code> → &lt;code>::v-deep()&lt;/code> → &lt;code>:deep()&lt;/code>&lt;/p>
&lt;p>The evolution trend of deep selectors is evident:&lt;/p>
&lt;p>&lt;strong>Combinator Selector&lt;/strong> → &lt;strong>Pseudo-element&lt;/strong> → &lt;strong>Pseudo-class&lt;/strong>&lt;/p>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>Use &lt;code>::v-deep&lt;/code> in Vue 2.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use &lt;code>:deep()&lt;/code> in Vue 3.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>/deep/&lt;/code> requires specific browser versions and is not recommended.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Some CSS preprocessors poorly support &lt;code>&amp;gt;&amp;gt;&amp;gt;&lt;/code>. Use it only without preprocessors; otherwise, avoid it.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>3 ready-to-use css effect libraries</title><link>https://www.skstory.online/p/3-ready-to-use-css-effect-libraries/</link><pubDate>Tue, 22 Oct 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/3-ready-to-use-css-effect-libraries/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*H2VF8IQ-uju6jJziJIXMrA.png" alt="Featured image of post 3 ready-to-use css effect libraries" />&lt;p>These libraries are a collection of free, open-source CSS elements designed to enhance web projects with unique and modern UI components. It offers a wide variety of customizable elements such as buttons, loaders, and animations, which can be easily integrated into your projects. It focuses on delivering visually appealing and interactive elements, making it easier for developers to create engaging user interfaces.&lt;/p>
&lt;p>&lt;strong>Features&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Variety of Components: Includes buttons, loaders, animations, and more.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Customizable: Easily modify styles to fit your design needs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Open Source: Free to use and contribute to.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Modern Design: Keeps up with the latest design trends.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rich Animations: Offers a variety of built-in animations to enhance user interaction.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Benefits&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Time-Saving: Quickly implement beautiful UI elements without building from scratch.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Responsive: Designed to work well on different devices and screen sizes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Community-Driven: Contributions from developers worldwide enhance the library.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>How to Use&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Browse the Collection: Choose the elements you want to use from the Official website.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Copy the Code: Each element comes with pre-written HTML and CSS.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ntegrate: Add the code to your project and customize as needed.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>These libraries are a great resource for developers looking to streamline their development process with stylish and functional UI components.&lt;/p>
&lt;h2 id="uiverse">Uiverse
&lt;/h2>&lt;h2 id="aceternity-ui">Aceternity UI
&lt;/h2>&lt;h2 id="magic-ui">Magic UI
&lt;/h2></description></item><item><title>Did you know that Vue3 Components Can “Pause” Rendering？</title><link>https://www.skstory.online/p/did-you-know-that-vue3-components-can-pause-rendering/</link><pubDate>Tue, 10 Sep 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/did-you-know-that-vue3-components-can-pause-rendering/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/0*u0epgmNovwsaszzN.png" alt="Featured image of post Did you know that Vue3 Components Can “Pause” Rendering？" />&lt;h2 id="introduction">Introduction
&lt;/h2>&lt;p>Sometimes we want to render a component only after fetching data from the server. Here are some methods to achieve this:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Request data in the parent component and use &lt;code>v-if&lt;/code> to render the child component only after receiving the data, passing it via props.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Request data in the &lt;code>onMounted&lt;/code> lifecycle of the child component and use &lt;code>v-if&lt;/code> in the template to control rendering.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Both methods have drawbacks. The ideal solution is to handle data fetching inside the child component and “pause” rendering until the data is ready.&lt;/p>
&lt;h2 id="example">Example
&lt;/h2>&lt;h3 id="data-request-in-parent-component">Data Request in Parent Component
&lt;/h3>&lt;p>Father:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Child&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;user&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;user&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">loading&lt;/span>&lt;span class="o">...&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">onMounted&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;vue&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">Child&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./Child.vue&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">null&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">fetchUser&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">resolve&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setTimeout&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">resolve&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;John&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">phone&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;xxxxxxxxxx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="mi">2000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">onMounted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">fetchUser&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Child:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">userName&lt;/span>&lt;span class="err">：&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">phone&lt;/span>&lt;span class="err">：&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">phone&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">props&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">defineProps&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s2">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This method involves fetching &lt;code>user&lt;/code> data in the parent component and passing it to the child, showing a loading message in the meantime. However, it places the data-fetching logic in the parent component, which isn&amp;rsquo;t ideal.&lt;/p>
&lt;h3 id="data-request-in-child-components-onmounted">Data Request in Child Component’s onMounted
&lt;/h3>&lt;p>Father:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;template&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Child /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/template&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;script setup lang=&amp;#34;ts&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import Child from &amp;#34;./Child.vue&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/script&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Child:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">userName&lt;/span>&lt;span class="err">：&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">phone&lt;/span>&lt;span class="err">：&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">phone&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">loading&lt;/span>&lt;span class="o">...&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">onMounted&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;vue&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">null&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">fetchUser&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Simulate&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="n">fetching&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">resolve&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setTimeout&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">resolve&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Jhon&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">phone&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;xxxxxxxxxx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="mi">2000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">onMounted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">fetchUser&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We placed the data request in &lt;code>onMounted&lt;/code>, which triggers the first rendering of the child component during initialization. At this point, &lt;code>user&lt;/code> is still &lt;code>null&lt;/code>, so we have to use &lt;code>v-if=&amp;quot;user&amp;quot;&lt;/code> in the template to prevent displaying the child component&amp;rsquo;s content and render a &lt;code>loading&lt;/code> message with &lt;code>v-else&lt;/code>.&lt;/p>
&lt;p>When data is retrieved from the server and the reactive variable &lt;code>user&lt;/code> is reassigned, it triggers a page re-render. This leads to a second rendering where the child component&amp;rsquo;s content is displayed.&lt;/p>
&lt;p>As seen above, this approach causes the child component to render twice. Additionally, placing the &lt;code>loading&lt;/code> logic inside the child component increases its complexity. Thus, this approach is not ideal.&lt;/p>
&lt;p>The perfect solution is to “pause” rendering of the child component during &lt;code>fetchUser&lt;/code>, using &lt;code>fallback&lt;/code> to display a loading page. This &lt;code>loading&lt;/code> logic doesn&amp;rsquo;t need to be inside the child component—it appears automatically during the &amp;ldquo;paused&amp;rdquo; period. Once the server data request is complete, the child component begins to render, and the &lt;code>loading&lt;/code> page is automatically removed.&lt;/p>
&lt;h2 id="solution">Solution
&lt;/h2>&lt;p>The first method’s drawback is that the child component only renders after receiving data, but the data request logic is placed in the parent component. Ideally, all logic should be encapsulated within the child component.&lt;/p>
&lt;p>The second method’s drawback is that the child component actually renders once during initialization before data is retrieved from the server. We have to control this with &lt;code>v-if&lt;/code> in the template to prevent rendering the child component&amp;rsquo;s content. After receiving data from the server, the child component renders a second time, displaying its content. This approach clearly renders the child component twice.&lt;/p>
&lt;p>Is there a perfect solution where the data retrieval logic is inside the child component, and rendering is “paused” until the data request completes?&lt;/p>
&lt;p>The answer is yes! Vue 3’s &lt;code>Suspense&lt;/code> component combined with using &lt;code>await&lt;/code> at the top level of &lt;code>setup&lt;/code> can perfectly fulfill this requirement!&lt;/p>
&lt;p>Here’s the official introduction to Suspense:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>&amp;lt;Suspense&amp;gt;&lt;/code> is a built-in component that coordinates the handling of async dependencies in the component tree. It allows us to wait for multiple nested async dependencies to resolve and render a loading state while waiting.&lt;/p>
&lt;/blockquote>
&lt;p>For more on using Suspense, check out this &lt;a class="link" href="https://medium.com/stackademic/understanding-suspense-in-vue3-af0dd74f04c9" target="_blank" rel="noopener"
>article&lt;/a>.&lt;/p>
&lt;p>The &lt;code>Suspense&lt;/code> component supports two slots: &lt;code>#default&lt;/code> and &lt;code>#fallback&lt;/code>. If the &lt;code>#default&lt;/code> slot contains async components, it first renders the content in &lt;code>#fallback&lt;/code>. Once the async component loads, it replaces the &lt;code>#fallback&lt;/code> content with the async component&amp;rsquo;s content.&lt;/p>
&lt;p>If our child component is async, &lt;code>Suspense&lt;/code> can help us achieve the desired functionality.&lt;/p>
&lt;p>&lt;code>Suspense&lt;/code> can automatically render a &lt;code>loading&lt;/code> state using the &lt;code>#fallback&lt;/code> slot during the loading of async child components. Once the async component loads, it renders the child component&amp;rsquo;s content for the first time.&lt;/p>
&lt;p>In this case, the problem is how to turn our child component into an asynchronous component?&lt;/p>
&lt;p>The answer is already given by Vue’s official documentation. If a component uses &lt;code>await&lt;/code> at its top level in &lt;code>&amp;lt;script setup&amp;gt;&lt;/code>, it will become an asynchronous component. We simply need to use &lt;code>await&lt;/code> in the top level of our child component to request data from the server.&lt;/p>
&lt;p>Here’s what the transformed code looks like:&lt;/p>
&lt;p>Father:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Suspense&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AsyncChild&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span> &lt;span class="c1">#fallback&amp;gt;loading...&amp;lt;/template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">Suspense&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">AsyncChild&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./AsyncChild.vue&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The &lt;code>Suspense&lt;/code> component is used in the parent component, passing 2 slots to this component. The &lt;code>#default&lt;/code> slot is for the asynchronous child component AsyncChild, the default slot can be used without adding &lt;code>#default&lt;/code> to the top of the element.&lt;/p>
&lt;p>And with the &lt;code>#fallback&lt;/code> slot, the asynchronous child component AsyncChild will not be rendered first during the asynchronous child component loading process. Instead, the &lt;code>loading&lt;/code> in the &lt;code>#fallback&lt;/code> slot will be rendered first, and then the &lt;code>loading&lt;/code> will be automatically replaced with the content of the child when the asynchronous child finishes loading.&lt;/p>
&lt;p>Child:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">userName&lt;/span>&lt;span class="err">：&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">phone&lt;/span>&lt;span class="err">：&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">phone&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ref&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;vue&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">null&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">fetchUser&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">fetchUser&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Simulate&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="n">fetching&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">resolve&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setTimeout&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">resolve&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Jhon&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">phone&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;xxxxxxxxxx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="mi">2000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We use &lt;code>await&lt;/code> in the top level of &lt;code>&amp;lt;script setup&amp;gt;&lt;/code> and then assign the value obtained by &lt;code>await&lt;/code> to the user variable. After using &lt;code>await&lt;/code> at the top level, the child component becomes an asynchronous component and is loaded only after &lt;code>await fetchUser()&lt;/code> is executed, i.e., after getting the data from the server.&lt;/p>
&lt;p>And since we use &lt;code>Suspense&lt;/code> in the parent component, we don&amp;rsquo;t render the child component until it&amp;rsquo;s loaded, i.e., until we get the data from the server (which is equivalent to “pausing” the rendering of the child component). Instead, it renders the &lt;code>loading&lt;/code> in the &lt;code>#fallback&lt;/code> slot, and waits until it gets the data from the server before the asynchronous subcomponent is loaded. Only then will the subcomponent be rendered for the first time, and the &lt;code>loading&lt;/code> will be replaced with the rendered content of the subcomponent.&lt;/p>
&lt;p>Since we got the value of &lt;code>user&lt;/code> from the server the first time we rendered the subcomponent, &lt;code>user&lt;/code> is no longer &lt;code>null&lt;/code>, so we don&amp;rsquo;t have to use &lt;code>v-if=“user”&lt;/code> at the top of the template, even though we have to read &lt;code>user.name&lt;/code> in the &lt;code>template&lt;/code>.&lt;/p>
&lt;p>After the &lt;code>Suspense&lt;/code> + top-level &lt;code>await&lt;/code> modification, when rendering the parent&amp;rsquo;s &lt;code>Suspense&lt;/code> and finding out that its child has an asynchronous component, the rendering of the child will be “paused” and the &lt;code>loading&lt;/code> component will be rendered automatically instead.&lt;/p>
&lt;p>The child component uses &lt;code>await&lt;/code> at the top level of &lt;code>setup&lt;/code> to wait for the data request from the server, when the data is gotten from the server then the child component is considered to be loaded, then the first rendering will be done, and the content of loading will be replaced by the content rendered in the child component automatically.&lt;/p>
&lt;p>And &lt;code>Suspense&lt;/code> also supports multiple asynchronous sub-components to get data from the server, when these asynchronous sub-components all get data from the server, then it will automatically replace the &lt;code>loading&lt;/code> with the content rendered by these asynchronous sub-components.&lt;/p>
&lt;p>The &lt;code>Suspense&lt;/code> component is still experimental and should be used with caution in production environments, but Nuxt3 is already using Suspense internally.&lt;/p>
&lt;h2 id="principle">Principle
&lt;/h2>&lt;p>When rendering a subcomponent, &lt;code>Suspense&lt;/code> does not immediately execute the &lt;code>render&lt;/code> function of the asynchronous subcomponent when it realizes that the subcomponent is an asynchronous component. Instead, it adds a flag called &lt;code>deps&lt;/code> to indicate that the default subcomponent is currently an asynchronous component, and pauses rendering the asynchronous subcomponent.&lt;/p>
&lt;p>Since the asynchronous subcomponent is a Promise, you can add the &lt;code>.then()&lt;/code> method after loading the Promise of the asynchronous subcomponent, and only in the &lt;code>.then()&lt;/code> method will you go ahead and continue rendering the asynchronous subcomponent.&lt;/p>
&lt;p>Currently the asynchronous subcomponent has paused rendering, and then it will go and read the &lt;code>deps&lt;/code> token. If the &lt;code>deps&lt;/code> flag is &lt;code>true&lt;/code>, the asynchronous subcomponent has paused rendering, and the &lt;code>loading&lt;/code> component in the &lt;code>fallback&lt;/code> slot will be rendered to the page.&lt;/p>
&lt;p>When the asynchronous subcomponent finishes loading it triggers the &lt;code>.then()&lt;/code> method of the Promise, which continues rendering the asynchronous subcomponent. The &lt;code>.then()&lt;/code> method executes the &lt;code>render&lt;/code> function of the asynchronous subcomponent to generate the virtual DOM, and then generates the real DOM based on the virtual DOM, and finally replaces the content of the &lt;code>fallback&lt;/code> slot that was rendered on the page with the content of the real DOM generated by the asynchronous component.&lt;/p></description></item><item><title>Learn These New Features in Vue 3.5 Now!</title><link>https://www.skstory.online/p/learn-these-new-features-in-vue-3.5-now/</link><pubDate>Thu, 05 Sep 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/learn-these-new-features-in-vue-3.5-now/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*nSM03v1PRpXL2yqKIHEPYA.png" alt="Featured image of post Learn These New Features in Vue 3.5 Now!" />&lt;h2 id="introduction">Introduction
&lt;/h2>&lt;p>On September 3, 2024, the official Vue team released Vue.js 3.5, a stable version containing no breaking changes but including internal improvements and useful new features. Let&amp;rsquo;s explore some interesting changes.&lt;/p>
&lt;h2 id="reactive-props-destructuring">Reactive Props Destructuring
&lt;/h2>&lt;p>Before Vue 3.5, you used &lt;code>toRef()&lt;/code> to destructure props reactively:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">toRef&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">props&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">defineProps&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Reactive&lt;/span> &lt;span class="n">destructuring&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="n">property&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">toRef&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">props&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;count&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="nb">log&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In Vue 3.5, you can directly destructure reactively:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Vue&lt;/span> &lt;span class="mf">3.5&lt;/span> &lt;span class="n">allows&lt;/span> &lt;span class="n">direct&lt;/span> &lt;span class="n">reactive&lt;/span> &lt;span class="n">destructuring&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">defineProps&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="nb">log&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Access to a destructured variable like count is automatically compiled into props.count by the compiler, so it is tracked on access.&lt;/p>
&lt;h2 id="default-prop-values">Default Prop Values
&lt;/h2>&lt;p>Before Vue 3.5, default props values were written like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">With&lt;/span> &lt;span class="n">TypeScript&lt;/span> &lt;span class="n">generics&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">at&lt;/span> &lt;span class="n">compile&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">props&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">withDefaults&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">defineProps&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">With&lt;/span> &lt;span class="n">JavaScript&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">at&lt;/span> &lt;span class="n">runtime&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">props&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">defineProps&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Number&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">default&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In Vue 3.5, default prop values can be written like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">defineProps&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">js&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">defineProps&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ne">String&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can assign default values directly like in JavaScript object destructuring, which is pretty nice!&lt;/p>
&lt;h2 id="obtaining-template-references-with-usetemplateref">Obtaining Template References with useTemplateRef()
&lt;/h2>&lt;p>In Vue 3, you can use &lt;code>ref&lt;/code> for template references to access the DOM and child components, but &lt;code>ref&lt;/code> can be confusing. For example, is a &lt;code>ref&lt;/code> variable reactive data or a DOM element? Vue 3.5 introduces &lt;code>useTemplateRef&lt;/code>, which solves these issues perfectly.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;list&amp;#34;&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;listEl&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;itemEl&amp;#34;&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;item in list&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{{&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">useTemplateRef&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">onMounted&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">listRef&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">useTemplateRef&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;listEl&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">itemRef&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">useTemplateRef&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;itemEl&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">onMounted&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">listRef&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="n">div&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">itemRef&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="n">Proxy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ne">Array&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">div&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">div&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">div&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>When a template-bound ref has multiple elements with the same name, u&lt;code>seTemplateRef()&lt;/code> returns an array, as shown with the &lt;code>v-for&lt;/code> rendered list.&lt;/p>
&lt;h2 id="teleport-component-improvements">Teleport Component Improvements
&lt;/h2>&lt;p>&lt;code>&amp;lt;Teleport&amp;gt;&lt;/code> Specific usage can be found in &lt;a class="link" href="https://medium.com/@kxming/understanding-teleport-in-vue3-42943b104d3e" target="_blank" rel="noopener"
>this article&lt;/a>&lt;/p>
&lt;p>The &lt;code>&amp;lt;Teleport&amp;gt;&lt;/code> component has a known limitation where its target element must exist when the component is mounted. In Vue 3.5, &lt;code>&amp;lt;Teleport&amp;gt;&lt;/code> introduces a defer prop to mount it after the current render cycle:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Teleport defer to=&amp;#34;#cont&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;div v-if=&amp;#34;open&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;span&amp;gt;Mounted to div with id &amp;#39;cont&amp;#39;&amp;lt;/span&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button @click=&amp;#34;open = false&amp;#34;&amp;gt;Close&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/Teleport&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;!-- Container for Teleport content --&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;div id=&amp;#34;cont&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;button @click=&amp;#34;open = true&amp;#34;&amp;gt;Open&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Since &lt;code>&amp;lt;div id=&amp;quot;cont&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code> is rendered after the Teleport, you need the defer prop. If &lt;code>&amp;lt;div id=&amp;quot;cont&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code> is rendered before, defer is not needed.&lt;/p>
&lt;h2 id="generating-unique-application-ids-with-useid">Generating Unique Application IDs with useId()
&lt;/h2>&lt;p>&lt;code>useId()&lt;/code> is used to generate unique IDs for each application, ensuring stability across server and client renders. It can be used for generating IDs for form elements and accessibility attributes without causing ID conflicts in SSR applications:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">useId&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">useId&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">form&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">label&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">label&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">input&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;text&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">form&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考引用">参考引用
&lt;/h2>&lt;p>For more updates in Vue 3.5, check out the &lt;a class="link" href="https://blog.vuejs.org/posts/vue-3-5" target="_blank" rel="noopener"
>Announcing Vue 3.5&lt;/a> link for more information.&lt;/p></description></item><item><title>10 Extremely Useful Front-End Libraries You Might Have Been Looking For</title><link>https://www.skstory.online/p/10-extremely-useful-front-end-libraries-you-might-have-been-looking-for/</link><pubDate>Sat, 24 Aug 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/10-extremely-useful-front-end-libraries-you-might-have-been-looking-for/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*GqSbIvTEgHMoyHcuDhB_ZA.png" alt="Featured image of post 10 Extremely Useful Front-End Libraries You Might Have Been Looking For" />&lt;h2 id="radashhttpsgithubcomsodirayradash">&lt;a class="link" href="https://github.com/sodiray/radash" target="_blank" rel="noopener"
>radash&lt;/a>
&lt;/h2>&lt;p>A practical utility library that&amp;rsquo;s more modern compared to lodash. It provides new functions like tryit and retry. The source code is highly readable, and most functions can be copied directly for use without installation.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*GM2hw1D-p7PTRdWTfpyI6A.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="dayjshttpsgithubcomiamkundayjs">&lt;a class="link" href="https://github.com/iamkun/dayjs" target="_blank" rel="noopener"
>dayjs&lt;/a>
&lt;/h2>&lt;p>Day.js is a minimalist JavaScript library, only 2KB in size. It is largely compatible with Moment.js, providing date parsing, manipulation, and display, with multi-language support&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*uWz1B5zbOwf1rbhAwe4-mQ.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="driverhttpsgithubcomkamranahmedsedriverjs">&lt;a class="link" href="https://github.com/kamranahmedse/driver.js" target="_blank" rel="noopener"
>driver&lt;/a>
&lt;/h2>&lt;p>Driver.js is a lightweight, vanilla JavaScript library for creating page tours. It&amp;rsquo;s easy to use and only 5KB when gzipped.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*mLDqR7cbvqPniTIKv8wk4Q.gif"
loading="lazy"
>&lt;/p>
&lt;h2 id="formkitdrag-and-drophttpsgithubcomformkitdrag-and-drop">&lt;a class="link" href="https://github.com/formkit/drag-and-drop" target="_blank" rel="noopener"
>@formkit/drag-and-drop&lt;/a>
&lt;/h2>&lt;p>FormKit DnD is a small, framework-agnostic drag-and-drop library, about 4KB when compressed. It&amp;rsquo;s designed with a data-first approach.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*Q1JiSUEaE9uIiwHYvA_SMw.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="logicflowhttpsgithubcomdidilogicflow">&lt;a class="link" href="https://github.com/didi/LogicFlow" target="_blank" rel="noopener"
>logicflow&lt;/a>
&lt;/h2>&lt;p>LogicFlow is a flowchart editing framework that provides essential functionality for interaction and editing, along with flexible node customization and plugin mechanisms, catering to business needs for flowchart-like diagrams.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*Bamip_FNapZwi8fHaZ04qQ.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="progressbarhttpsgithubcomkimmobrunfeldtprogressbarjs">&lt;a class="link" href="https://github.com/kimmobrunfeldt/progressbar.js" target="_blank" rel="noopener"
>ProgressBar&lt;/a>
&lt;/h2>&lt;p>With ProgressBar.js, it&amp;rsquo;s easy to create responsive and stylish progress bars for the web. Animations perform well even on mobile devices. It provides a few built‑in shapes like Line, Circle and SemiCircle but you can also create custom shaped progress bars with any vector graphic editor.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:948/format:webp/1*Cb83MCx2VVZWtpQSOoiNbQ.gif"
loading="lazy"
>&lt;/p>
&lt;h2 id="tesseractjshttpsgithubcomnapthatesseractjs">&lt;a class="link" href="https://github.com/naptha/tesseract.js" target="_blank" rel="noopener"
>tesseract.js&lt;/a>
&lt;/h2>&lt;p>A pure JavaScript OCR library supporting over 100 languages. It’s useful for recognizing text in images and filtering images based on searches.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*1xvLP-8AYREhlmXZu9aU-w.gif"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1012/format:webp/1*yWZYKQ5-u74lwIDowc-HJQ.gif"
loading="lazy"
>&lt;/p>
&lt;h2 id="zxcvbnhttpsgithubcomzxcvbn-tszxcvbn">&lt;a class="link" href="https://github.com/zxcvbn-ts/zxcvbn" target="_blank" rel="noopener"
>zxcvbn&lt;/a>
&lt;/h2>&lt;p>zxcvbn is a password strength estimator inspired by password crackers. It recognizes and analyzes over 40 thousand common passwords using pattern matching and conservative estimation and filters out common first names, last names, popular words from Wikipedia and common words in many cultures, and recognizes common patterns like dates, repetitions (e.g. &amp;lsquo;aaa&amp;rsquo;), sequences (e.g. &amp;lsquo;abcd&amp;rsquo;), keyboard smashes (e.g. &amp;lsquo;qwertyuiop&amp;rsquo;), and l33t speak.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*7TOeiUqZwWMEhRehPYjs5Q.gif"
loading="lazy"
>&lt;/p>
&lt;h2 id="sunshine-trackhttpsgithubcombrixcrypto-js">&lt;a class="link" href="https://github.com/brix/crypto-js" target="_blank" rel="noopener"
>sunshine-track&lt;/a>
&lt;/h2>&lt;p>Designed for front-end monitoring, inspired by web-see. It reports user behavior, errors, page transitions, white screens, and performance metrics. It’s suitable for Vue, React, Angular, and more.&lt;/p>
&lt;p>Features:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>User behavior reporting: clicks, page transitions, requests, etc.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Manual reporting: Vue custom directives and functions for manual reporting.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Custom reporting: format and determine which data to report.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Request data reporting: filter and decide which request data to report.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Reporting methods: img, http, beacon, xhr, fetch, with custom headers.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Data caching: local storage, browser cache, IndexedDB.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Reporting thresholds: configurable thresholds for data reporting.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Global click reporting: configure selectors and text for DOM node reporting.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Page performance metrics: white screens, FP, FCP, LCP, CLS, TTFB, FID, etc.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="lottiehttpsgithubcomairbnblottie-web">&lt;a class="link" href="https://github.com/airbnb/lottie-web" target="_blank" rel="noopener"
>lottie&lt;/a>
&lt;/h2>&lt;p>Lottie, developed by Airbnb, is a cross-platform animation library. Designers can create animations in After Effects and export them as JSON files, which can be seamlessly integrated into mobile apps and websites.&lt;/p>
&lt;p>Advantages:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>After Effects compatibility: Convert AE projects (.json) to app/web animations.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Cross-platform: Supports Android, iOS, Web, and frameworks like React Native.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>High performance: Uses native graphics for better performance than CSS/JS.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Customizable: Animations can be modified in color, size, speed, etc.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Lightweight: Small file size as they contain only keyframe data.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Easy to use: Simple API for easy integration.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rich effects: Supports complex animations from After Effects.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Real-time rendering: Maintains quality across different screen sizes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Community support: Active open-source community with frequent updates.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Animation caching: Supports caching to improve repeat playback performance.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Lottie is versatile, suitable for simple loaders to complex interactive animations.&lt;/p>
&lt;p>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*qaaJ_zFlqmNT3CKeLpsvKw.gif"
loading="lazy"
>&lt;/p></description></item><item><title>Excellent JS Tips and Methods</title><link>https://www.skstory.online/p/excellent-js-tips-and-methods/</link><pubDate>Mon, 12 Aug 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/excellent-js-tips-and-methods/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*06Q7HHp3ppGAdrIFwNVDVg.jpeg" alt="Featured image of post Excellent JS Tips and Methods" />&lt;h2 id="array-related">Array Related
&lt;/h2>&lt;h3 id="1-declare-and-initialize-arrays">1. Declare and Initialize Arrays
&lt;/h3>&lt;p>You can initialize an array with a specific size using default values like &lt;code>&amp;quot;&amp;quot;&lt;/code>, &lt;code>null&lt;/code>, or &lt;code>0&lt;/code>. This is common for one-dimensional arrays, but how about initializing a two-dimensional array/matrix?&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">array&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ne">Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fill&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Output&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">matrix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ne">Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fill&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="ne">Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fill&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Output&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="ne">Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="ne">Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="ne">Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="ne">Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="ne">Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="filter-out-falsy-values-from-an-array">Filter Out Falsy Values from an Array
&lt;/h3>&lt;p>Falsy values like &lt;code>0&lt;/code>，&lt;code>undefined&lt;/code>，&lt;code>null&lt;/code>，&lt;code>false&lt;/code>，&lt;code>&amp;quot;&amp;quot;&lt;/code>，&lt;code>''&lt;/code> can be easily omitted using:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">array&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">false&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">array&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Output&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="array-lookup">Array Lookup
&lt;/h3>&lt;p>Use &lt;code>indexOf()&lt;/code> to find the position of an item in an array. If not found, it returns &lt;code>-1&lt;/code>. This can be simplified using bitwise NOT (&lt;code>~&lt;/code>):&lt;/p>
&lt;p>Traditional:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">if(arr.indexOf(item) &amp;gt; -1) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if(arr.indexOf(item) === -1) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Simplified:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">if(~arr.indexOf(item)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">​
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if(!~arr.indexOf(item)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Alternatively, use &lt;code>includes()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">if(arr.includes(item)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="shuffle-an-array">Shuffle an Array
&lt;/h3>&lt;p>利用内置&lt;code>Math.random()&lt;/code>方法。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sort&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">Math&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Output&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Call&lt;/span> &lt;span class="n">it&lt;/span> &lt;span class="n">again&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="check-for-a-safe-array">Check for a Safe Array
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">safeArray&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="ne">Array&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="err">?&lt;/span> &lt;span class="n">array&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="数组清空">数组清空
&lt;/h3>&lt;p>Compare &lt;code>arr.length = 0;&lt;/code> vs &lt;code>arr = [];&lt;/code>:&lt;/p>
&lt;p>The main use of &lt;code>arr.length = 0&lt;/code> is to completely clear the actual array that the literal points to.&lt;/p>
&lt;p>In JavaScript, we know that reference types store addresses in the stack memory, pointing to real data in the heap memory. Suppose we have a non-empty array &lt;code>arr&lt;/code>.&lt;/p>
&lt;p>When we use &lt;code>arr = []&lt;/code>, we are actually reassigning &lt;code>arr&lt;/code> to a new empty array &lt;code>[]&lt;/code>.&lt;/p>
&lt;p>At this point, the original array that &lt;code>arr&lt;/code> was pointing to still exists in memory (which might lead to memory leaks).&lt;/p>
&lt;p>Using &lt;code>arr.length = 0&lt;/code>: This command acts on the real array, effectively clearing the original array directly.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">// Clear the original array:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">arr.length = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// Reassign to a new empty array:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">arr = [];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="union-intersection-and-difference">Union, Intersection, and Difference
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">let a = new Set([1, 2, 3]);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">let b = new Set([4, 3, 2]);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// Union
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">let union = new Set([...a, ...b]); // Set {1, 2, 3, 4}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// Intersection
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">let intersect = new Set([...a].filter(x =&amp;gt; b.has(x))); // set {2, 3}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// Difference
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">let difference = new Set([...a].filter(x =&amp;gt; !b.has(x))); // Set {1}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="map-loop">Map Loop
&lt;/h3>&lt;p>The &lt;code>map&lt;/code> method can change the original array if dealing with objects:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">cities&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;NewYork&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;DC&amp;#39;&lt;/span> &lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">newCities&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cities&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">item&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">country&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;America&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">item&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cities&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cities&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="p">[{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;NewYork&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">country&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;America&amp;#39;&lt;/span> &lt;span class="p">},{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;DC&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">country&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;America&amp;#39;&lt;/span> &lt;span class="p">}]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;newCities&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newCities&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="o">//&lt;/span> &lt;span class="n">output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="p">[{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;NewYork&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">country&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;America&amp;#39;&lt;/span> &lt;span class="p">},{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;DC&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">country&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;America&amp;#39;&lt;/span> &lt;span class="p">}]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="logical-operations">Logical Operations
&lt;/h2>&lt;h3 id="use-logical-operators-for-conditions">Use Logical Operators for Conditions
&lt;/h3>&lt;p>Reduce nested &lt;code>if...else&lt;/code> or &lt;code>switch&lt;/code> with basic logical operators:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function doSomething(arg1) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> arg1 = arg1 || 10;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Set arg1 to 10 if not already set
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return arg1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">let foo = 10;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">foo === 10 &amp;amp;&amp;amp; doSomething();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// Output: 10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">foo === 5 || doSomething();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// Output: 10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="optional-chaining">Optional Chaining
&lt;/h3>&lt;p>Optional chaining &lt;code>?.&lt;/code> stops evaluation if the value before &lt;code>?&lt;/code> is undefined or null.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">employee&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Kapil&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">employee&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Output&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Kapil&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">employ&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Output&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">undefined&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>For dynamic properties:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">object?.[index]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>For method calls:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">object.runsOnlyIfMethodExists?.()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="nullish-coalescing-operator">Nullish Coalescing Operator
&lt;/h3>&lt;p>The &lt;code>??&lt;/code> operator returns the right operand when the left is null or undefined.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">foo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">null&lt;/span> &lt;span class="err">??&lt;/span> &lt;span class="s1">&amp;#39;my school&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Output&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;my school&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">baz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="err">??&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Output&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="and">&lt;code>||=&lt;/code>and&lt;code>??=&lt;/code>
&lt;/h3>&lt;p>&lt;code>||=&lt;/code> assigns a value only if the left side is falsy, whereas &lt;code>??=&lt;/code> assigns only if the left side is &lt;code>null&lt;/code> or &lt;code>undefined&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">let x = null;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">x ||= 5;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">console.log(x); // Output: 5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">let y = 10;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">y ||= 7;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">console.log(y); // Output: 10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">let a = null;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a ??= 5;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">console.log(a); // Output: 5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">let b = 10;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">b ??= 7;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">console.log(b); // Output: 10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="number-related">Number Related
&lt;/h2>&lt;h3 id="convert-decimal-to-binary-or-hexadecimal">Convert Decimal to Binary or Hexadecimal
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Output&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1010&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Output&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;a&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">num&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Output&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;12&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="get-a-random-integer-between-two-values">Get a Random Integer Between Two Values
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">random&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">min&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">Math&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">floor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Math&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">max&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nb">min&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">min&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="convert-a-string-to-a-number">Convert a String to a Number
&lt;/h3>&lt;p>Conventional:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">let str = &amp;#39;2&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">console.log(Number(str)) //2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Optimized:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">let str = &amp;#39;2&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">console.log(~~str) //2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">console.log(+str) //2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="scientific-notation">Scientific Notation
&lt;/h3>&lt;p>Use scientific notation to represent numbers:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">for (let i = 0; i &amp;lt; 1e7; i++) {}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// All these comparisons return true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1e0 === 1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1e1 === 10;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1e2 === 100;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1e3 === 1000;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1e4 === 10000;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1e5 === 100000;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="exponentiation">Exponentiation
&lt;/h3>&lt;p>Use &lt;code>**&lt;/code> for exponentiation:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">2**3; // 8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2**4; // 16
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4**3; // 64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="convert-to-boolean">Convert to Boolean
&lt;/h3>&lt;p>Use double logical NOT to convert to Boolean:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">!!23 // TRUE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">!!&amp;#34;&amp;#34; // FALSE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">!!0 // FALSE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">!!{} // TRUE
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="object-related">Object Related
&lt;/h2>&lt;h3 id="check-if-an-object-is-empty">Check if an Object is Empty
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">isEmpty&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">obj&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">Reflect&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ownKeys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">constructor&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="ne">Object&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">isEmpty&lt;/span>&lt;span class="p">({})&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="bp">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">isEmpty&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;not empty&amp;#34;&lt;/span>&lt;span class="p">})&lt;/span> &lt;span class="o">//&lt;/span>&lt;span class="bp">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="dynamic-property-names">Dynamic Property Names
&lt;/h3>&lt;p>Use brackets for dynamic properties:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">person&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="s1">&amp;#39;Alice&amp;#39;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="n">Output&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Alice&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="check-for-a-safe-object">Check for a Safe Object
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">isValidObject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nb">typeof&lt;/span> &lt;span class="n">obj&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="ne">Array&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="ne">Object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">safeObject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">obj&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">isValidObject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="err">?&lt;/span> &lt;span class="n">obj&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="string-related">String Related
&lt;/h2>&lt;h2 id="capitalize-first-letter">Capitalize First Letter
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">capitalize&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">charAt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toUpperCase&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">capitalize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;hello world&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="s2">&amp;#34;Hello world&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="reverse-a-string">Reverse a String
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">reverse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reverse&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">reverse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;hello world&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="s1">&amp;#39;dlrow olleh&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="filter-special-characters">Filter Special Characters
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function filterCharacter(str) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> let pattern = new RegExp(&amp;#34;[`~!@#$^&amp;amp;*()=：”“&amp;#39;。，、？|{}&amp;#39;:;&amp;#39;%,\\[\\].&amp;lt;&amp;gt;/?~！@#￥……&amp;amp;*（）&amp;amp;;—|{ }【】‘；]&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> let resultStr = &amp;#34;&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for (let i = 0; i &amp;lt; str.length; i++) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> resultStr = resultStr + str.substr(i, 1).replace(pattern, &amp;#39;&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return resultStr;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// Example
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">filterCharacter(&amp;#39;gyaskjdhy12316789#$%^&amp;amp;!@#1=123,./[&amp;#39;); // Result: gyaskjdhy123167891123
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="browser-related">Browser Related
&lt;/h2>&lt;h3 id="copy-content-to-clipboard">Copy Content to Clipboard
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">copyToClipboard&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">navigator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">clipboard&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">copyToClipboard&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hello World&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Compatibility:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">copyText&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">navigator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">clipboard&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">navigator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">permissions&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">navigator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">clipboard&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">textArea&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">document&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">createElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;textArea&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">textArea&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">textArea&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">style&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">width&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">textArea&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">style&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;fixed&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">textArea&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">style&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;-999px&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">textArea&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">style&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">top&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;10px&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">textArea&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">setAttribute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;readonly&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;readonly&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">document&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">appendChild&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">textArea&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">textArea&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">success&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">document&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execCommand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;copy&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">throw&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Unable to copy text&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">document&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">removeChild&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">textArea&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="n">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Copy failed:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">err&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="clear-all-cookies">Clear All Cookies
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">clearCookies&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">document&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cookie&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">forEach&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cookie&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">document&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cookie&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cookie&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">/^&lt;/span> &lt;span class="o">+/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">/=.*/&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">expires&lt;/span>&lt;span class="o">=$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">Date&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toUTCString&lt;/span>&lt;span class="p">()};&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="get-selected-text">Get Selected Text
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">getSelectedText&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getSelection&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toString&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="scroll-to-the-top-of-the-page">Scroll to the Top of the Page
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">goToTop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">scrollTo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="check-if-scrolled-to-the-bottom">Check if Scrolled to the Bottom
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">scrolledToBottom&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">document&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">documentElement&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">clientHeight&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">scrollY&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">document&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">documentElement&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">scrollHeight&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="check-if-tab-is-active">Check if Tab is Active
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">isTabInView&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">document&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="redirect-to-a-url">Redirect to a URL
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">redirect&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">location&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">href&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">url&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">redirect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://www.google.com/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="open-print-dialog">Open Print Dialog
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">showPrintDialog&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">print&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="check-if-element-is-focused">Check if Element is Focused
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">elementIsInFocus&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">el&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">el&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="n">document&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">activeElement&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="url-related">URL Related
&lt;/h2>&lt;h3 id="get-parameters-from-url-and-convert-to-object">Get Parameters from URL and Convert to Object
&lt;/h3>&lt;p>网页路径经常是：www.google.com?search=js&amp;amp;xxx=kkk这种形式的，我们是经常需要取参数的，可以使用第三方的qs包实现，如果你只是要实现去参数，这一句代码就可以实现，不用再引入qs了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">getParameters&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">URL&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;${decodeURI(URL.split(&amp;#34;&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="s2">&amp;#34;)[1]).replace(/&amp;#34;&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">/&amp;amp;/&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#34;,&amp;#34;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">/=/&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#34;:&amp;#34;&amp;#39;&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="s2">&amp;#34;}`);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">getParameters&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://www.google.com.hk/search?q=js+md&amp;amp;newwindow=1&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">q&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;js+md&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newwindow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;1&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="miscellaneous">Miscellaneous
&lt;/h2>&lt;h3 id="check-if-a-function">Check if a Function
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">isFunction&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nb">typeof&lt;/span> &lt;span class="n">obj&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s2">&amp;#34;function&amp;#34;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">typeof&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nodeType&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="s2">&amp;#34;number&amp;#34;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">typeof&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">item&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="s2">&amp;#34;function&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="debouncethrottle">Debounce/Throttle
&lt;/h3>&lt;p>&lt;strong>Debounce&lt;/strong>: Triggers after a specified time only if no further events are received.&lt;/p>
&lt;p>&lt;strong>Throttle&lt;/strong>: Triggers once within a specified time frame despite multiple events.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">// Debounce
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">function debounce(fn, delay) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> let timer = null;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return function () {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (timer) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clearTimeout(timer);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> timer = setTimeout(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fn.apply(this);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }, delay);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> };
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// Throttle
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">function throttle(fn) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> let timer = null;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return function () {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (timer) return;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> timer = setTimeout(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fn.apply(this, arguments);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> timer = null;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }, 1000);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> };
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="common-regex-validations">Common Regex Validations
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Validate&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">9&lt;/span> &lt;span class="n">Chinese&lt;/span> &lt;span class="n">characters&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">validateName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="o">/^&lt;/span>&lt;span class="p">[&lt;/span>\&lt;span class="n">u4e00&lt;/span>&lt;span class="o">-&lt;/span>\&lt;span class="n">u9fa5&lt;/span>&lt;span class="p">]{&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">$/.&lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Validate&lt;/span> &lt;span class="n">phone&lt;/span> &lt;span class="n">number&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">validatePhoneNum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">mobile&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="o">/^&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">]&lt;/span>\&lt;span class="n">d&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">$/.&lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mobile&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Validate&lt;/span> &lt;span class="n">password&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">18&lt;/span> &lt;span class="n">characters&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">letters&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">numbers&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">underscores&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">validatePassword&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="o">/^&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">zA&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Z0&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="p">]{&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">$/.&lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="good-coding-habits">Good Coding Habits
&lt;/h2>&lt;h3 id="use-destructuring">Use Destructuring
&lt;/h3>&lt;p>Replace &lt;code>console.log('name', name)&lt;/code> with &lt;code>console.log({name})&lt;/code>.&lt;/p>
&lt;h3 id="clever-use-of-js-implicit-type-conversion">Clever Use of JS Implicit Type Conversion
&lt;/h3>&lt;p>Quickly convert to &lt;code>Number&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39;32&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">timeStamp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">Date&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Quickly convert to &lt;code>Boolean&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">isTrue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">!!&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Quickly convert to &lt;code>String&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="nb">str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="use-return-instead-of-ifelse">Use Return Instead of If…Else
&lt;/h3>&lt;p>Replace:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">if (condition1) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // do condition1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">} else if (condition2) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // do condition2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">} else if(condition3) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // do condition3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>With:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">if (condition1) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // do condition1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if (condition2) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // do condition2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if (condition3) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // do condition3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This simplifies code and makes it easier to read and edit.&lt;/p></description></item><item><title>Usage of h() in vue3</title><link>https://www.skstory.online/p/usage-of-h-in-vue3/</link><pubDate>Mon, 12 Aug 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/usage-of-h-in-vue3/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*GqSbIvTEgHMoyHcuDhB_ZA.png" alt="Featured image of post Usage of h() in vue3" />&lt;h2 id="introduction">Introduction
&lt;/h2>&lt;p>According to Vue’s official documentation, &lt;code>h()&lt;/code> it is a rendering function used to create virtual DOM nodes. When building a page with HTML tags in a Vue project, the final result will be converted into a vnode. The &lt;code>h()&lt;/code> function creates a vnode directly, allowing for more flexibility in constructing component rendering logic and improving performance.&lt;/p>
&lt;h2 id="syntax">Syntax
&lt;/h2>&lt;p>The &lt;code>h()&lt;/code> rendering function has three parameters, of which the second and third are optional:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>type&lt;/strong>: The type of node to create, which can be an HTML tag, component, or function (functional component).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>props (optional)&lt;/strong>: An object containing properties for the node, passed as a prop.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>children (optional)&lt;/strong>: Child nodes that can be strings, arrays, or other vnode objects.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">// Basic usage example
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">function h(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> type: string | Component,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> props?: object | null,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> children?: Children | Slot | Slots
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">): VNode
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// Example usage
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">h(&amp;#39;div&amp;#39;, { id: &amp;#39;foo&amp;#39; }, &amp;#39;Hello!&amp;#39;);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Parameter Explanation&lt;/p>
&lt;ol>
&lt;li>&lt;code>type&lt;/code>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>HTML tag: If there type is a string, it will be parsed as an HTML tag.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Component: If the type is an object or function, it will be parsed as a Vue component.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Asynchronous component: The type can also be a function that returns a Promise, which will be resolved to the component.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>&lt;code>props&lt;/code>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>Props are optional parameters used to specify properties for the node.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When passing props, you should pass an object containing property names and values as a prop.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can also pass &lt;code>null&lt;/code> it as a value for props.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>&lt;code>children&lt;/code>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>Child nodes can be strings, arrays, or other vnode objects.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If child nodes are an array, each element in the array will be considered a node’s child.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If a child node is a function, it will be called during rendering and its return value will be used as the child node.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="example-usage-scenarios">Example Usage Scenarios
&lt;/h2>&lt;p>Below are some real-world project examples where you might want to use the &lt;code>h()&lt;/code> function:&lt;/p>
&lt;h3 id="creating-virtual-dom-elements">Creating Virtual DOM Elements
&lt;/h3>&lt;p>&lt;strong>In an options API component&lt;/strong>: when defining the &lt;code>render&lt;/code> option, you can return a vnode using the &lt;code>h()&lt;/code> function.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Options&lt;/span> &lt;span class="n">API&lt;/span> &lt;span class="n">example&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">h&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">className&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;h2&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">className&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;title&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="s1">&amp;#39;I am title&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;p&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;I am content&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="ow">or&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">defineComponent&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;vue&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">defineComponent&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Jsx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">render&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">I&lt;/span> &lt;span class="n">am&lt;/span> &lt;span class="n">div&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Composition API Components&lt;/strong>: When using Composition API components, you can also define a &lt;code>setup&lt;/code> the function that returns a rendering function.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Composition&lt;/span> &lt;span class="n">API&lt;/span> &lt;span class="n">example&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">h&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;vue&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setup&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">that&lt;/span> &lt;span class="n">returns&lt;/span> &lt;span class="n">another&lt;/span> &lt;span class="n">function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;div&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;app&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;h2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="s2">&amp;#34;I am title&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;p&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;I am content&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="dynamic-rendering-of-components">Dynamic Rendering of Components
&lt;/h3>&lt;p>As shown, combining &lt;code>component&lt;/code> for dynamic rendering of components is one of the most common business scenarios. However, many people do not use &lt;code>h()&lt;/code> to implement this function in such cases. In fact, using &lt;code>h()&lt;/code> can avoid the overhead of template compilation in this scenario, bringing about performance optimization and making it easier to handle as well.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">click&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;changeComponent&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="k">switch&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">component&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">is&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;createComponent()&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ref&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">ComponentA&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./ComponentA.vue&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">ComponentB&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./ComponentB.vue&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">nowComponent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ComponentA&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">changeComponent&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">nowComponent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nowComponent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;ComponentA&amp;#39;&lt;/span> &lt;span class="err">?&lt;/span> &lt;span class="s1">&amp;#39;ComponentB&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;ComponentA&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">createComponent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nowComponent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;ComponentA&amp;#39;&lt;/span> &lt;span class="err">?&lt;/span> &lt;span class="n">ComponentA&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">ComponentB&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="creating-functional-components">Creating Functional Components
&lt;/h3>&lt;p>Using &lt;code>h()&lt;/code> to create functional components can not only be independently extracted and maintained but also eliminate the need for an additional &lt;code>.vue&lt;/code> file, which is truly very practical. This approach is particularly suitable for simple UI components, as it can significantly simplify code and improve performance.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">FunctionalComponent&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Functional component&amp;#34;&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">click&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;handleClick&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">h&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">defineEmits&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">FunctionalComponent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">props&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;p&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">props&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;button&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">onClick&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">emit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;click&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="s1">&amp;#39;click&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">emit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">defineEmits&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;click&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">handleClick&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;handleClick&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>As shown above, this is a typical method of using functional components, including how to interact with them in parent-child components. The FunctionalComponent receives props and context parameters and uses the &lt;code>h()&lt;/code> function to construct the page. Additionally, it triggers event handlers in the parent component through &lt;code>context.emit&lt;/code>.&lt;/p>
&lt;p>Note: Props are used to receive attributes passed from parent components. Context is used to access the component context, such as slots and method events.&lt;/p>
&lt;h3 id="rendering-dynamic-attributes">Rendering Dynamic Attributes
&lt;/h3>&lt;p>If a component or tag needs to define some dynamic attributes, using the &lt;code>h()&lt;/code> rendering function becomes quite convenient.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">click&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;myVisibility&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Switch&lt;/span> &lt;span class="n">status&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">component&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">is&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;componentWithProps()&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ref&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">visible&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">function&lt;/span> &lt;span class="n">myVisibility&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">visible&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">visible&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">componentWithProps&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">visible&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">visible&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>As shown above, the &lt;code>h()&lt;/code> function inside determines whether the vnode has the &lt;code>visible&lt;/code> class based on the value of &lt;code>visible&lt;/code>, and implements dynamic styling when the button is clicked. Of course, dynamic classes are just an example; in reality, all kinds of attributes or child components within &lt;code>h()&lt;/code> can be dynamic and flexible, far surpassing what can be achieved with HTML.&lt;/p>
&lt;p>&lt;strong>Note&lt;/strong>: The term &lt;code>vnode&lt;/code> refers to a virtual node, which is a representation of a DOM node in the Vue.js framework.&lt;/p>
&lt;h3 id="using-slots">Using Slots
&lt;/h3>&lt;p>When using &lt;code>h()&lt;/code> with functional components and slots to pass content, it can greatly improve flexibility.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SlotComponent&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span> &lt;span class="c1">#default&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">In&lt;/span> &lt;span class="n">slot&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">SlotComponent&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">h&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">SlotComponent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">props&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;p&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;In slot:&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">slots&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">default&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">slots&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>As shown above, when referencing the &lt;code>SlotComponent&lt;/code> component, the contents within its internal &lt;code>&amp;lt;template&amp;gt;&lt;/code> tag will be passed as the default slot&amp;rsquo;s content to the &lt;code>SlotComponent&lt;/code>. Additionally, you can use &lt;code>context.slots.default()&lt;/code> to retrieve and render the content of the default slot. Therefore, when we encapsulate a functional component but have dynamic parts inside, it is particularly suitable for using slots in this way.&lt;/p>
&lt;p>Note: Props are used to receive attributes passed from parent components. Context is used to access the component context, such as slots and method events.&lt;/p>
&lt;h3 id="creating-dynamic-tags">Creating Dynamic Tags
&lt;/h3>&lt;p>The code below uses &lt;code>h()&lt;/code> function combined with dynamic components to achieve switching between different HTML tags.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">click&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;changeTag&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Switch&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">component&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">is&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;createElement()&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span> &lt;span class="n">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ts&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ref&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">tag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">changeTag&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tag&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tag&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span> &lt;span class="err">?&lt;/span> &lt;span class="s1">&amp;#39;section&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;div&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">createElement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tag&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;dynamic&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>As shown above, it simply determines which HTML tag’s VNode to return based on the value of tag. When business logic involves dynamic changes to tags, this approach is beneficial and avoids the use of &lt;code>v-if&lt;/code> producing a large amount of redundant code.&lt;/p>
&lt;p>&lt;strong>Note&lt;/strong>: VNode refers to a virtual node, which is a representation of a DOM node in the Vue.js framework.&lt;/p></description></item><item><title>Modern Code Review Practices in Frontend Development</title><link>https://www.skstory.online/p/modern-code-review-practices-in-frontend-development/</link><pubDate>Mon, 05 Aug 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/modern-code-review-practices-in-frontend-development/</guid><description>&lt;img src="https://cdn-images-1.medium.com/max/1600/1*nqoZqpUXp7E0N6ByU52waQ.png" alt="Featured image of post Modern Code Review Practices in Frontend Development" />&lt;h2 id="what-is-code-review">What is Code Review？
&lt;/h2>&lt;p>Code review is an essential practice in modern software development. It involves systematically examining code written by one developer and reviewed by others. This process not only helps in identifying bugs and issues early but also promotes knowledge sharing and maintains code quality. In this blog post, we&amp;rsquo;ll explore the benefits of code review, best practices, and how to conduct an effective code review process.&lt;/p>
&lt;h2 id="benefits-of-code-review">Benefits of Code Review
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Improved Code Quality&lt;/strong>: By having multiple eyes on the code, potential issues such as bugs, security vulnerabilities, and performance bottlenecks can be identified and addressed early.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Knowledge Sharing&lt;/strong>: Code reviews are an excellent opportunity for team members to learn from each other. Junior developers can gain insights from more experienced colleagues, and even seasoned developers can pick up new techniques and perspectives.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Consistency&lt;/strong>: Ensuring that the code adheres to the project&amp;rsquo;s coding standards and conventions is crucial. Code reviews help maintain consistency across the codebase, making it easier to read, understand, and maintain.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Reduced Bugs&lt;/strong>: Catching bugs early in the development process is far more cost-effective than fixing them later. Code reviews help identify and fix issues before they make it to production.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Enhanced Collaboration&lt;/strong>: Regular code reviews foster a culture of collaboration and open communication within the team. It encourages developers to discuss and debate different approaches, leading to better solutions.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="practice">Practice
&lt;/h2>&lt;p>Traditional Code Review practices typically involve reviewing Pull Requests (PRs) and providing feedback or optimization suggestions for any unreasonable parts. To improve team code quality and knowledge sharing, it is valuable to have regular short Code Review meetings with team members to summarize issues encountered during the review process. Of course, you should not directly point out who wrote problematic code, as the goal is to facilitate learning and exchange.&lt;/p>
&lt;p>However, manual Code Reviews consume a lot of time, effort, and mental energy. With the advancement of AI technology, we can leverage AI tools to assist with Code Reviews. Next, let&amp;rsquo;s see how to use AI tools for Code Reviews in VSCode.&lt;/p>
&lt;h2 id="plugin">Plugin
&lt;/h2>&lt;p>First, install the VSCode plugin &lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=Blackboxapp.blackbox" target="_blank" rel="noopener"
>BLACKBOX AI&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/1600/1*4ndvW_4JG6zGZA0KFLYvsg.png"
loading="lazy"
>&lt;/p>
&lt;p>Create a &lt;code>test.js&lt;/code> file with the following content:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function checkStatus() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (isLogin()) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (isVip()) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (isDoubleCheck()) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> done();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> } else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> throw new Error(&amp;#34;Don&amp;#39;t click twice&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> } else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> throw new Error(&amp;#34;Not VIP&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> } else {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> throw new Error(&amp;#34;UnLogin&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This function contains nested conditional logic. How can we optimize it? Select the code you want to optimize, right-click, and choose &amp;ldquo;Improve Code.&amp;rdquo;&lt;/p>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/1600/1*Hql--ELGmN0bVApXnt3xGg.gif"
loading="lazy"
>&lt;/p>
&lt;p>Let&amp;rsquo;s see the suggestion provided by AI:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function checkStatus() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (!isLogin()) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> throw new Error(&amp;#34;UnLogin&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (!isVip()) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> throw new Error(&amp;#34;Not VIP&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (isDoubleCheck()) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> throw new Error(&amp;#34;Don&amp;#39;t click twice&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> done();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The AI&amp;rsquo;s suggestion is quite good. We can further optimize the suggestions by providing more prompts, but we won&amp;rsquo;t go into that here. Typically, the basic optimization idea for this type of code is to place validation logic first and the main logic afterward.&lt;/p>
&lt;p>So, do we still need to perform Code Reviews ourselves if we have AI tools? The answer is yes. AI tools can help reduce the effort needed to read large amounts of code, improve efficiency, and shorten Code Review time. However, we still need to refine and summarize the AI&amp;rsquo;s suggestions. This helps broaden our knowledge and enables us to write better-quality code.&lt;/p>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;p>Code review is a powerful practice that, when done right, can significantly improve the quality of your codebase and the overall development process. By following best practices and fostering a culture of constructive feedback and collaboration, teams can leverage code reviews to build better software, reduce bugs, and promote continuous learning.&lt;/p>
&lt;p>Whether you&amp;rsquo;re a seasoned developer or new to the practice, embracing code reviews can lead to more robust, maintainable, and high-quality code. So, make code reviews an integral part of your development workflow and watch your team and codebase thrive.&lt;/p>
&lt;p>AI tools significantly enhance the Code Review process by automating repetitive tasks, providing intelligent suggestions, and ensuring code quality. However, human oversight remains crucial to validate AI-generated feedback and maintain the contextual integrity of the code. Combining AI with human expertise leads to more efficient and effective Code Reviews.&lt;/p></description></item><item><title>Using Tailwind CSS in Vue3</title><link>https://www.skstory.online/p/using-tailwind-css-in-vue3/</link><pubDate>Thu, 01 Aug 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/using-tailwind-css-in-vue3/</guid><description>&lt;img src="https://cdn-images-1.medium.com/max/1600/1*3LVaHw2SN2wh5JhwDZHHyA.png" alt="Featured image of post Using Tailwind CSS in Vue3" />&lt;p>When it comes to frontend development frameworks, &lt;a class="link" href="https://medium.com/r/?url=https%3A%2F%2Fgithub.com%2Ftailwindlabs%2Ftailwindcss" target="_blank" rel="noopener"
>Tailwind CSS&lt;/a> is a highly prominent choice. It is a powerful and flexible CSS framework that provides a plethora of utility classes to help developers rapidly build modern user interfaces. Tailwind CSS is a popular modern CSS framework that offers a set of atomic classes to construct web interfaces. Unlike traditional CSS frameworks like Bootstrap or Foundation, Tailwind CSS emphasizes a utility-first approach to styling, allowing developers to flexibly combine and customize styles without writing custom CSS.&lt;/p>
&lt;p>Here are some key features and concepts of Tailwind CSS:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Atomic Classes&lt;/strong>: The core concept of Tailwind CSS is atomic classes, which provide a large number of class names, each corresponding to a specific style property. By combining these atomic classes, developers can quickly create the desired styles, such as &lt;code>bg-red-500&lt;/code> for setting the background color to red, and &lt;code>text-xl&lt;/code> for setting the text size to extra-large.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Utility Classes&lt;/strong>: In addition to common style properties, Tailwind CSS offers a wealth of utility classes for layout, spacing, borders, and more. These utility classes help developers quickly achieve responsive design and layouts.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Customization&lt;/strong>: Tailwind CSS provides extensive configuration options, allowing developers to customize styles according to project requirements, including colors, fonts, spacing, etc. This makes the styles of each project highly customizable.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Responsive Design&lt;/strong>: Tailwind CSS has built-in utility classes for responsive design, making it easy for developers to write styles that adapt to different screen sizes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Plugin System&lt;/strong>: Tailwind CSS features a powerful plugin system that allows developers to write custom plugins to extend the framework&amp;rsquo;s functionality, such as adding new style classes or utility classes.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Overall, Tailwind CSS offers a very flexible way to build web interfaces. It differs significantly from traditional CSS frameworks in its approach, emphasizing atomic style combinations and customization. Many developers find that using Tailwind CSS can significantly increase development efficiency and make styles more maintainable and predictable.&lt;/p>
&lt;h2 id="installation-and-configuration">Installation and Configuration
&lt;/h2>&lt;p>To start using Tailwind CSS, you first need to install it via npm or yarn. Since Tailwind is a PostCSS plugin, it can also be used with Sass, Less, Stylus, or other preprocessors. Note that you don’t need to use a preprocessor with Tailwind—in any case, you usually write very little CSS in a Tailwind project, so using a preprocessor is not as necessary as it is when writing a lot of custom CSS.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install -D tailwindcss postcss autoprefixer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># or
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yarn add -D tailwindcss postcss autoprefixer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After installation, generate the default configuration files and stylesheet by running:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx tailwindcss init -p
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The generated default configuration files are named &lt;code>tailwind.config.js&lt;/code> and &lt;code>postcss.config.js&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">/**&lt;/span> &lt;span class="n">tailwind&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">js&lt;/span> &lt;span class="o">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">/**&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;tailwindcss&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Config&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Manually&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="n">your&lt;/span> &lt;span class="n">project&lt;/span> &lt;span class="n">directories&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;./index.html&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;./src/**/*.{vue,js,ts,jsx,tsx}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">theme&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">extend&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plugins&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can customize properties such as colors, fonts, and spacing in these configuration files. Next, create a CSS file and import Tailwind CSS styles:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/* Import Tailwind CSS */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@import &amp;#39;tailwindcss/base&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@import &amp;#39;tailwindcss/components&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@import &amp;#39;tailwindcss/utilities&amp;#39;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="import-tailwindcss-in-mainjs">Import tailwind.css in main.js
&lt;/h2>&lt;p>After configuring, import &lt;code>tailwind.css&lt;/code> by modifying the &lt;code>src/main.js&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="s1">&amp;#39;./assets/main.css&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="s1">&amp;#39;./assets/tailwind.css&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">createApp&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">createPinia&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;pinia&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">App&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./App.vue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./router&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">createApp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">App&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">createPinia&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;#app&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="using-utility-classes">Using Utility Classes
&lt;/h2>&lt;p>Tailwind CSS provides a rich set of utility classes covering various style properties. Let&amp;rsquo;s demonstrate how to use these utility classes with a simple example. Suppose we want to create a button with a blue background and centered text; we can write:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;button class=&amp;#34;bg-blue-500 text-white font-bold py-2 px-4 rounded&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Click me
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In this example, we use the &lt;code>bg-blue-500&lt;/code> class to set the button&amp;rsquo;s background color to blue, the &lt;code>text-white&lt;/code> class to set the text color to white, the &lt;code>font-bold&lt;/code> class to set the text to bold, &lt;code>py-2&lt;/code> and &lt;code>px-4&lt;/code> classes to set vertical and horizontal padding, and the &lt;code>rounded&lt;/code> class to set rounded borders.&lt;/p>
&lt;h2 id="installing-the-vscode-plugin">Installing the VSCode Plugin
&lt;/h2>&lt;p>If you decide to use Tailwind CSS, install the &lt;a class="link" href="https://medium.com/r/?url=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3Dbradlc.vscode-tailwindcss" target="_blank" rel="noopener"
>Tailwind CSS IntelliSense&lt;/a> plugin provided by the official team. This plugin offers features like autocompletion and real-time preview of actual styles.&lt;/p>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/1600/1*cEY-uQaMRsBh9MXtyRWaLg.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="common-plugins">Common Plugins
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://medium.com/r/?url=https%3A%2F%2Fgithub.com%2Fpostcss%2Fautoprefixer" target="_blank" rel="noopener"
>autoprefixer&lt;/a>: Automatically adds vendor prefixes to CSS properties that need them.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://medium.com/r/?url=https%3A%2F%2Fgithub.com%2Fpostcss%2Fpostcss-import" target="_blank" rel="noopener"
>postcss-import&lt;/a>: Allows us to use the @import syntax to import CSS files into other files.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://medium.com/r/?url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fpostcss-preset-env" target="_blank" rel="noopener"
>postcss-preset-env&lt;/a>: Transforms modern CSS (like nesting and custom media queries) into CSS that browsers can understand.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>postcss-nested: Provides support for writing nested styles in CSS. It is directly included within the Tailwind CSS package itself. By default, it uses the postcss-nested plugin. If you prefer to use postcss-nesting, you can enable it by adding &lt;code>'tailwindcss/nesting': 'postcss-nesting'&lt;/code> in your configuration file.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://medium.com/r/?url=https%3A%2F%2Fcssnano.github.io%2Fcssnano" target="_blank" rel="noopener"
>cssnano&lt;/a>: For CSS code compression.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">postcss&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">js&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">module&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plugins&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;postcss-import&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;tailwindcss/nesting&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tailwindcss&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">autoprefixer&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">process&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">NODE_ENV&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;production&amp;#39;&lt;/span> &lt;span class="err">?&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">cssnano&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="configuration">Configuration
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">/**&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;tailwindcss&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Config&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">The&lt;/span> &lt;span class="n">content&lt;/span> &lt;span class="n">section&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">where&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">configure&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">paths&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">all&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">your&lt;/span> &lt;span class="n">HTML&lt;/span> &lt;span class="n">templates&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">JS&lt;/span> &lt;span class="n">components&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">any&lt;/span> &lt;span class="n">other&lt;/span> &lt;span class="n">files&lt;/span> &lt;span class="n">that&lt;/span> &lt;span class="n">contain&lt;/span> &lt;span class="n">Tailwind&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">names&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">The&lt;/span> &lt;span class="n">theme&lt;/span> &lt;span class="n">section&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">where&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">define&lt;/span> &lt;span class="n">your&lt;/span> &lt;span class="n">color&lt;/span> &lt;span class="n">palette&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fonts&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">font&lt;/span> &lt;span class="n">sizes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">border&lt;/span> &lt;span class="n">sizes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">breakpoints&lt;/span>&lt;span class="err">—&lt;/span>&lt;span class="n">anything&lt;/span> &lt;span class="n">related&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">visual&lt;/span> &lt;span class="n">design&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">your&lt;/span> &lt;span class="n">site&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">theme&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">extend&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">The&lt;/span> &lt;span class="n">plugins&lt;/span> &lt;span class="n">section&lt;/span> &lt;span class="n">allows&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">register&lt;/span> &lt;span class="n">plugins&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="n">Tailwind&lt;/span> &lt;span class="n">that&lt;/span> &lt;span class="n">can&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">generate&lt;/span> &lt;span class="n">extra&lt;/span> &lt;span class="n">utilities&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">components&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">base&lt;/span> &lt;span class="n">styles&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">custom&lt;/span> &lt;span class="n">variants&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plugins&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">The&lt;/span> &lt;span class="n">presets&lt;/span> &lt;span class="n">section&lt;/span> &lt;span class="n">allows&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">specify&lt;/span> &lt;span class="n">your&lt;/span> &lt;span class="n">own&lt;/span> &lt;span class="n">custom&lt;/span> &lt;span class="n">base&lt;/span> &lt;span class="n">configuration&lt;/span> &lt;span class="n">instead&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">using&lt;/span> &lt;span class="n">Tailwind&lt;/span>&lt;span class="err">’&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">base&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">presets&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;@acmecorp/base-tailwind-config&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">The&lt;/span> &lt;span class="n">prefix&lt;/span> &lt;span class="n">option&lt;/span> &lt;span class="n">allows&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">custom&lt;/span> &lt;span class="n">prefix&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">all&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">Tailwind&lt;/span>&lt;span class="err">’&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="n">generated&lt;/span> &lt;span class="n">utility&lt;/span> &lt;span class="n">classes&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">This&lt;/span> &lt;span class="n">can&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">really&lt;/span> &lt;span class="n">useful&lt;/span> &lt;span class="n">when&lt;/span> &lt;span class="n">layering&lt;/span> &lt;span class="n">Tailwind&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">top&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">existing&lt;/span> &lt;span class="n">CSS&lt;/span> &lt;span class="n">where&lt;/span> &lt;span class="n">there&lt;/span> &lt;span class="n">might&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">naming&lt;/span> &lt;span class="n">conflicts&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">prefix&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;tw-&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">The&lt;/span> &lt;span class="n">important&lt;/span> &lt;span class="n">option&lt;/span> &lt;span class="n">lets&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">control&lt;/span> &lt;span class="n">whether&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">Tailwind&lt;/span>&lt;span class="err">’&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="n">utilities&lt;/span> &lt;span class="n">should&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">marked&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">important&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">This&lt;/span> &lt;span class="n">can&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">really&lt;/span> &lt;span class="n">useful&lt;/span> &lt;span class="n">when&lt;/span> &lt;span class="n">using&lt;/span> &lt;span class="n">Tailwind&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="n">existing&lt;/span> &lt;span class="n">CSS&lt;/span> &lt;span class="n">that&lt;/span> &lt;span class="n">has&lt;/span> &lt;span class="n">high&lt;/span> &lt;span class="n">specificity&lt;/span> &lt;span class="n">selectors&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">important&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">The&lt;/span> &lt;span class="n">separator&lt;/span> &lt;span class="n">option&lt;/span> &lt;span class="n">lets&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">customize&lt;/span> &lt;span class="n">which&lt;/span> &lt;span class="n">character&lt;/span> &lt;span class="n">should&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">separate&lt;/span> &lt;span class="n">modifiers&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">screen&lt;/span> &lt;span class="n">sizes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hover&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">focus&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">etc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="n">utility&lt;/span> &lt;span class="n">names&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">center&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">etc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">separator&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;_&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">The&lt;/span> &lt;span class="n">corePlugins&lt;/span> &lt;span class="n">section&lt;/span> &lt;span class="n">lets&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">completely&lt;/span> &lt;span class="n">disable&lt;/span> &lt;span class="n">classes&lt;/span> &lt;span class="n">that&lt;/span> &lt;span class="n">Tailwind&lt;/span> &lt;span class="n">would&lt;/span> &lt;span class="n">normally&lt;/span> &lt;span class="n">generate&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">don&lt;/span>&lt;span class="err">’&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="n">need&lt;/span> &lt;span class="n">them&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">your&lt;/span> &lt;span class="n">project&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">corePlugins&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ne">float&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">objectFit&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">objectPosition&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="limitation">Limitation
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>The granularity of Tailwind CSS can make the HTML structure overly complex, or require too many class names to achieve a particular effect, making it less readable.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For developers unfamiliar with Tailwind CSS, the learning curve can be somewhat steep.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://medium.com/r/?url=https%3A%2F%2Fdaisyui.com%2F" target="_blank" rel="noopener"
>daisyUI&lt;/a> is a customizable component library for Tailwind CSS. Unlike commonly used libraries like ElementUI or AntDesign, it provides some class names similar to Bootstrap. For ready-to-use components, you need to wrap them yourself. It comes with 47 components and 29 themes, which can be used directly in developed websites. It also supports customization, greatly simplifying the development process.&lt;/p>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/1600/1*QIRjHE_yIU_YkNjc1h-Nhg.png"
loading="lazy"
>&lt;/p></description></item><item><title>How to Modify an NPM Package When It Doesn't Meet Your Needs</title><link>https://www.skstory.online/p/how-to-modify-an-npm-package-when-it-doesnt-meet-your-needs/</link><pubDate>Tue, 30 Jul 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/how-to-modify-an-npm-package-when-it-doesnt-meet-your-needs/</guid><description>&lt;img src="https://cdn-images-1.medium.com/max/1600/1*ZS3iplWNdqvLSRzbbh8MzA.png" alt="Featured image of post How to Modify an NPM Package When It Doesn't Meet Your Needs" />&lt;p>During the development process, if you find that the functionality of an NPM package does not fully meet the requirements, or there are bugs, how to deal with it?&lt;/p>
&lt;p>There are scenarios where you might find a bug in an NPM package during development. Here&amp;rsquo;s how you can handle such situations:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Submit an Issue or Pull Request: The first step is to submit an issue to the original author or fork the repository, make the necessary changes, and create a pull request. However, this approach has a significant downside - it can be time-consuming. If the author is strict or inactive, it might take a long time for your changes to be merged, which your project might not be able to afford.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Temporary or Alternative Solutions: In cases where modifying the source package is not feasible, you need a temporary or alternative solution. Here are two common scenarios:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Small Code Changes&lt;/strong>: If the required modifications are minimal, consider using a patch.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Large Code Changes or Obfuscated Code&lt;/strong>: If the changes are extensive or the package code is minified/obfuscated, making direct modifications might not be practical. In this case, you can modify the source code, change the package name, and republish it. Then, update your project to use this new package.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Directly modifying the code in node_modules is possible but not recommended, as these changes will be lost the next time you run npm install or update the package. Below are some recommended methods to handle this situation effectively:&lt;/p>
&lt;h2 id="using-fork">Using Fork
&lt;/h2>&lt;p>The most common method is to fork the source code. You can fork the repository of the third-party package on GitHub or other hosting platforms. After making modifications to the source code, publish the modified package to npm. If you do not want it to be public, you can set up a private npm package. Switch the package in your project to the one you published.&lt;/p>
&lt;h2 id="submitting-pr">Submitting PR
&lt;/h2>&lt;p>If you believe your modification could benefit other users, you can submit a pull request (PR) to the original package&amp;rsquo;s maintainer. If the PR is accepted and merged, you can directly use the future versions of the official package without maintaining a fork.&lt;/p>
&lt;h2 id="external-code-modification">External Code Modification
&lt;/h2>&lt;p>This method involves not directly modifying the source code in &lt;code>node_modules&lt;/code>, but using JavaScript features to modify the internal properties of the package during execution.&lt;/p>
&lt;p>In simple terms, it involves using &lt;code>defineProperty&lt;/code>, &lt;code>prototype&lt;/code>, and other features to modify classes within the package. For example, in Vue 2.0, &lt;code>defineProperty&lt;/code> is used to intercept and proxy data on component instances. In Vue projects, we often mount global properties and methods on the Vue root instance &lt;code>Vue.prototype.xxx = xxxx&lt;/code> in &lt;code>main.js&lt;/code>.&lt;/p>
&lt;h2 id="pnpm-patch">pnpm patch
&lt;/h2>&lt;p>&lt;code>pnpm&lt;/code>&amp;rsquo;s patch command is inspired by a similar command in yarn.&lt;/p>
&lt;p>First, execute &lt;code>pnpm patch &amp;lt;pkg name&amp;gt;@&amp;lt;version&amp;gt;&lt;/code>. This command extracts the specified package to a temporary directory where you can freely edit it.
After making modifications, run &lt;code>pnpm patch-commit &amp;lt;path&amp;gt; &lt;/code>(the path is the temporary directory created earlier, which can be long and hard to remember, but don&amp;rsquo;t worry, the CLI will provide complete prompts) to generate a patch file and register it in your project using the &lt;code>patchedDependencies&lt;/code> field.&lt;/p>
&lt;h2 id="aliases">Aliases
&lt;/h2>&lt;p>pnpm provides an aliasing capability.&lt;/p>
&lt;p>Suppose you published a new package called awesome-lodash and use lodash as an alias to install it:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pnpm add lodash@npm:awesome-lodash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s assume you use lodash all over your project. There is a bug in lodash that breaks your project. You have a fix but lodash won&amp;rsquo;t merge it. Normally you would either install lodash from your fork directly (as a git-hosted dependency) or publish it with a different name. If you use the second solution you have to replace all the requires in your project with the new dependency name (&lt;code>require('lodash') =&amp;gt; require('awesome-lodash')&lt;/code>). With aliases, you have a third option.&lt;/p>
&lt;p>Publish a new package called &lt;code>awesome-lodash&lt;/code> and install it using lodash as its alias:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pnpm add lodash@npm:awesome-lodash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>No changes in code are needed. All the requires of lodash will now resolve to awesome-lodash.&lt;/p>
&lt;p>Sometimes you&amp;rsquo;ll want to use two different versions of a package in your project. Easy:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pnpm add lodash1@npm:lodash@1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pnpm add lodash2@npm:lodash@2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now you can require the first version of lodash via require(&amp;rsquo;lodash1&amp;rsquo;) and the second via require(&amp;rsquo;lodash2&amp;rsquo;).&lt;/p>
&lt;p>This gets even more powerful when combined with hooks. Maybe you want to replace lodash with awesome-lodash in all the packages in node_modules. You can easily achieve that with the following &lt;code>.pnpmfile.cjs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">readPackage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pkg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">pkg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dependencies&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">pkg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dependencies&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lodash&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pkg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dependencies&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lodash&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;npm:awesome-lodash@^1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">pkg&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">module&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">hooks&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">readPackage&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="patch-package">patch-package
&lt;/h2>&lt;p>&lt;a class="link" href="https://www.npmjs.com/package/patch-package#why-use-postinstall-postinstall-with-yarn" target="_blank" rel="noopener"
>patch-package&lt;/a>is a tool for fixing third-party dependencies, and it is very easy to use.&lt;/p>
&lt;p>&lt;strong>Installation&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="err">$&lt;/span> &lt;span class="nx">npm&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="nx">patch&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="kn">package&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">#&lt;/span> &lt;span class="nx">or&lt;/span> &lt;span class="nx">with&lt;/span> &lt;span class="nx">yarn&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">$&lt;/span> &lt;span class="nx">yarn&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="nx">patch&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="kn">package&lt;/span> &lt;span class="nx">postinstall&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">postinstall&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Note&lt;/strong>: Most times when you do a yarn, yarn add, yarn remove, or yarn install (which is the same as just yarn) Yarn will completely replace the contents of your node_modules with freshly unpackaged modules. patch-package uses the postinstall hook to modify these fresh modules, so that they behave well according to your will.&lt;/p>
&lt;p>Yarn only runs the postinstall hook after yarn and yarn add, but not after yarn remove. The postinstall-postinstall package is used to make sure your postinstall hook gets executed even after a yarn remove.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Usage:&lt;/strong>&lt;/p>
&lt;p>First make changes to the files of a particular package in your node_modules folder, then run&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">npx&lt;/span> &lt;span class="nx">patch&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="kn">package&lt;/span> &lt;span class="kn">package&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">#&lt;/span> &lt;span class="nx">or&lt;/span> &lt;span class="nx">with&lt;/span> &lt;span class="nx">yarn&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">yarn&lt;/span> &lt;span class="nx">patch&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="kn">package&lt;/span> &lt;span class="kn">package&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">name&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This will create a &lt;code>patches&lt;/code> file in the root directory of your project that contains all the changes made to the files of the specified package in node_modules. Inside will be a file called package-name+0.44.0.patch or something, which is a diff between normal old package-name and your fixed version. You can then commit this &lt;code>patches&lt;/code> file along with your other changes. When you install dependencies again, patch-package will apply these patches automatically.&lt;/p>
&lt;p>After completing the above steps, add the following to the &lt;code>scripts&lt;/code> section in &lt;code>package.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#34;scripts&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;postinstall&amp;#34;: &amp;#34;patch-package&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This way, when other team members pull the code and run &lt;code>npm install&lt;/code> or &lt;code>yarn install&lt;/code>, the patches will be automatically applied to the dependencies.&lt;/p>
&lt;p>In simple terms, this solution records the code and location of the patch and uses npm&amp;rsquo;s hook (the &lt;code>postinstall&lt;/code> hook is triggered after &lt;code>npm install&lt;/code>) to trigger the corresponding script after installing dependencies, overwriting the patches to the corresponding package in &lt;code>node_modules&lt;/code>.&lt;/p>
&lt;p>Of course, patches are version-specific, so you need to lock the version number. The downside is that if you need to upgrade, you have to repeat the process, but unless there are bugs or performance issues, you usually do not need to chase new versions.&lt;/p>
&lt;h2 id="advantages-of-patch-package">Advantages of patch-package
&lt;/h2>&lt;p>Although the above methods can solve specific scenarios through some tricks, they cannot avoid the problems caused by version upgrades. If the npm package is upgraded, it may cause errors in the previous modifications. Therefore, if you want to use the above methods, it is best to lock the version number. However, patch-package has the following features:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Version Mismatch&lt;/strong>&lt;/p>
&lt;p>If the version of the package you installed does not match the version recorded in your previous patch, npx patch-package will directly report an ERROR: Failed to apply patch for package xxxx at path. The prompt helps you locate the problem more easily.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Space Saving&lt;/strong>&lt;/p>
&lt;p>Using git diff to record patches is more space-saving than rewriting a source code, making it both safe and convenient.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Vue 3 Knowledge You Might Not Know</title><link>https://www.skstory.online/p/vue-3-knowledge-you-might-not-know/</link><pubDate>Fri, 12 Jul 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/vue-3-knowledge-you-might-not-know/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*5IsjkNAC17Fx8y68ITbHRA.jpeg" alt="Featured image of post Vue 3 Knowledge You Might Not Know" />&lt;h2 id="dynamically-binding-multiple-values-in-templates">Dynamically Binding Multiple Values in Templates
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">bind&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;objectOfAttrs&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">objectOfAttrs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;container&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">class&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;wrapper&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">style&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;background-color:green&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="dynamic-parameters">Dynamic Parameters
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;!--&lt;/span> &lt;span class="n">Dynamic&lt;/span> &lt;span class="n">event&lt;/span> &lt;span class="n">binding&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">eventName&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;handle&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Dynamic&lt;/span> &lt;span class="n">Event&lt;/span> &lt;span class="n">Binding&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;!--&lt;/span> &lt;span class="n">Dynamic&lt;/span> &lt;span class="n">attribute&lt;/span> &lt;span class="n">binding&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">HelloWorld&lt;/span> &lt;span class="p">:[&lt;/span>&lt;span class="n">attributeName&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;HelloWorld&amp;#34;&lt;/span>&lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ref&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">attributeName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;msg&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">eventName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;click&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">handle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Dynamic event triggered&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="iterating-over-objects-withv-for">Iterating Over Objects with v-for
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">li&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;(value, key, index) in myObject&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{{&lt;/span> &lt;span class="n">index&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="p">{{&lt;/span> &lt;span class="n">key&lt;/span> &lt;span class="p">}}:&lt;/span> &lt;span class="p">{{&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">reactive&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">myObject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">reactive&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;How to do lists in Vue&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">author&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Jane Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">publishedAt&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;2016-04-10&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="using-a-range-withv-for">Using a Range with v-for
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;template&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ul&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;li v-for=&amp;#34;n in 10&amp;#34;&amp;gt;{{ n }}&amp;lt;/li&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ul&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/template&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/*
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Output:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 9
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="watching-multiple-datasources">Watching Multiple Data Sources
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">watch&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ref&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">watch&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">newX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newY&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">newX&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">newY&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="watch-cant-directly-observe-reactive-object-properties">Watch Can&amp;rsquo;t Directly Observe Reactive Object Properties
&lt;/h2>&lt;p>When using watch, the first parameter should be a reactive object or a function that returns a reactive object. This restriction ensures Vue&amp;rsquo;s reactivity system can properly track changes using Proxy getters.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">obj&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">reactive&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">This&lt;/span> &lt;span class="n">won&lt;/span>&lt;span class="s1">&amp;#39;t work because we are passing a number to watch()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">watch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="n">Count&lt;/span> &lt;span class="n">is&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Instead&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">use&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">getter&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">watch&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="n">Count&lt;/span> &lt;span class="n">is&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="accessing-updated-dom-inwatch">Accessing Updated DOM in watch
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">watch(source, callback, {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flush: &amp;#39;post&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// or
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">watchEffect(callback, {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flush: &amp;#39;post&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// or
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">watchPostEffect(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /* executed after Vue updates */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="stopping-awatcher">Stopping a Watcher
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">unwatch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">watchEffect&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="n">later&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">when&lt;/span> &lt;span class="n">no&lt;/span> &lt;span class="n">longer&lt;/span> &lt;span class="n">needed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">unwatch&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>For more details on watch, you can refer to this blog.&lt;/p>
&lt;h2 id="function-template-references">Function Template References
&lt;/h2>&lt;p>The ref attribute can bind to a function, which is called whenever the bound component updates. This method provides more flexibility in obtaining element references. The function receives the element reference as the first argument:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">input&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;text&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">ref&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;getRef&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cpn&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">ref&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;getRef&amp;#34;&lt;/span>&lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">getRef&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">el&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">el&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="n">Direct&lt;/span> &lt;span class="n">DOM&lt;/span> &lt;span class="n">element&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">it&lt;/span>&lt;span class="s1">&amp;#39;s an element&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">el&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">el&lt;/span>&lt;span class="o">.$&lt;/span>&lt;span class="n">el&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="n">Component&lt;/span> &lt;span class="n">instance&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">it&lt;/span>&lt;span class="s1">&amp;#39;s a component&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: The argument will be null after the element is removed.&lt;/p>
&lt;h2 id="using-ref-withv-for">Using ref with v-for
&lt;/h2>&lt;p>The ref attribute can also be used with v-for to bind multiple elements/component instances generated by v-for. The value of the corresponding ref object will be an array.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">li&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;item in list&amp;#34;&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;itemRefs&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{{&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">onMounted&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">([&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">/*&lt;/span> &lt;span class="o">...&lt;/span> &lt;span class="o">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">itemRefs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">([])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">onMounted&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">itemRefs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: The order of elements in the array is not guaranteed to match the iteration order.&lt;/p>
&lt;h2 id="component-instance-references">Component Instance References
&lt;/h2>&lt;p>You can also use template references to get a child component&amp;rsquo;s instance. However, this depends on whether the child component uses the Options API or &lt;code>&amp;lt;script setup&amp;gt;&lt;/code>.&lt;/p>
&lt;p>If a child component uses the Options API or does not use &lt;code>&amp;lt;script setup&amp;gt;&lt;/code>, the parent component has full access to all the child component&amp;rsquo;s properties and methods.&lt;/p>
&lt;p>If a child component uses &lt;code>&amp;lt;script setup&amp;gt;&lt;/code>, it is private by default: the parent component cannot access anything within the child component.&lt;/p>
&lt;p>For the second case, the child component must explicitly expose properties or methods using the defineExpose macro.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span> &lt;span class="n">setup&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ref&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Compiler&lt;/span> &lt;span class="n">macros&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">such&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">defineExpose&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">don&lt;/span>&lt;span class="s1">&amp;#39;t need to be imported&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">defineExpose&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="withdefaults-helperfunction">withDefaults Helper Function
&lt;/h2>&lt;p>The withDefaults helper function is a utility that helps set default values for component props when defining them. This ensures that props have a preset default value if no value is passed. This can simplify the code, avoiding the need to manually set default values for each prop.&lt;/p>
&lt;p>Moreover, since withDefaults can help define the types and default values of props, TypeScript can correctly infer and check the usage of the component&amp;rsquo;s props.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">props&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">withDefaults&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">defineProps&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="ne">String&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">default&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="ow">or&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">props&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">withDefaults&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">defineProps&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;hello&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Can sessionStorage Share Data Across Multiple Tabs?</title><link>https://www.skstory.online/p/can-sessionstorage-share-data-across-multiple-tabs/</link><pubDate>Wed, 03 Jul 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/can-sessionstorage-share-data-across-multiple-tabs/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*dEcEJcGtium2C7FJaWrSuA.png" alt="Featured image of post Can sessionStorage Share Data Across Multiple Tabs?" />&lt;p>&lt;code>localStorage&lt;/code> and &lt;code>sessionStorage&lt;/code> are often discussed together, but what are the differences between them?&lt;/p>
&lt;blockquote>
&lt;p>The localStorage read-only property of the window interface allows you to access a Storage object for the Document’s origin; the stored data is saved across browser sessions.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>localStorage is similar to sessionStorage, except that while localStorage data has no expiration time, sessionStorage data gets cleared when the page session ends — that is, when the page is closed. (localStorage data for a document loaded in a “private browsing” or “incognito” session is cleared when the last “private” tab is closed.) — &lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage" target="_blank" rel="noopener"
>MDN&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>localStorage&lt;/code> can share data across different tabs under the same website. Here&amp;rsquo;s an example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">// You can store data in the first tab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localStorage.setItem(&amp;#39;name&amp;#39;, &amp;#39;fatfish&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// And read this data in another tab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localStorage.getItem(&amp;#39;name&amp;#39;); // fatfish
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="what-about-sessionstorage">What about sessionStorage?
&lt;/h2>&lt;p>&lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage" target="_blank" rel="noopener"
>MDN&lt;/a> explain:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>Whenever a document is loaded in a particular tab in the browser, a unique page session gets created and assigned to that particular tab. That page session is valid only for that particular tab.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>A page session lasts as long as the tab or the browser is open, and survives over page reloads and restores.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>Opening a page in a new tab or window creates a new session with the value of the top-level browsing context, which differs from how session cookies work.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>Opening multiple tabs/windows with the same URL creates sessionStorage for each tab/window.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>Duplicating a tab copies the tab’s sessionStorage into the new tab.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>Closing a tab/window ends the session and clears objects in sessionStorage.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Based on the second point, you might think that data can be shared across new pages opened from the current page. Try executing the following code in the console of the current page:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sessionStorage.setItem(&amp;#39;name&amp;#39;, &amp;#39;fatfish&amp;#39;);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then, open another page of the same site in a new tab. You won’t be able to read the data:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sessionStorage.getItem(&amp;#39;name&amp;#39;); // null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>So, the conclusion is that sessionStorage cannot share data across multiple tabs or windows. Does this mean the explanation on MDN is incorrect?&lt;/p>
&lt;h2 id="the-correct-explanation">The Correct Explanation
&lt;/h2>&lt;p>sessionStorage indeed cannot share data between multiple windows or tabs. However, when you open a new page via window.open or a link (not a new window), the new page will copy the sessionStorage of the original page.&lt;/p>
&lt;p>Here’s an example to illustrate this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sessionStorage.setItem(&amp;#39;name&amp;#39;, &amp;#39;fatfish&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">window.open(&amp;#39;your-page-url.html&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">// or
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;a href=&amp;#34;https://...&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thus, while sessionStorage does not share data between different windows or tabs, it does copy the data when opening a new page through certain methods.&lt;/p></description></item><item><title>How can ordinary people break through information barriers?</title><link>https://www.skstory.online/p/how-can-ordinary-people-break-through-information-barriers/</link><pubDate>Wed, 03 Jul 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/how-can-ordinary-people-break-through-information-barriers/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/0*xekwS8XV1oUz4559" alt="Featured image of post How can ordinary people break through information barriers?" />&lt;p>In an era of information explosion, breaking information barriers is crucial for personal development. Here are three concrete paths to help ordinary people bridge the information gap and enhance their vision and potential.&lt;/p>
&lt;h2 id="1-move-to-high-income-areas-to-earn-more-save-more-and-expand-your-network">1. Move to High-Income Areas to Earn More, Save More, and Expand Your Network
&lt;/h2>&lt;p>Firstly, geographical location has a significant impact on personal development. High-income areas usually mean more job opportunities and higher income levels, especially in first- and second-tier cities. Here are the specific steps:&lt;/p>
&lt;p>Choose the Right City: First- and second-tier cities typically offer more job opportunities and higher income levels. Choosing a city that suits your field of development is very important.&lt;/p>
&lt;p>Accumulate Initial Assets: Start accumulating assets as early as possible; young people have a higher risk tolerance and a longer time for investment returns.&lt;/p>
&lt;p>Expand Your Social Circle: You will meet more talented individuals and opportunities in high-income areas. Expanding your network helps you gain more information and resources.&lt;/p>
&lt;h2 id="2-enhance-vision-by-reading-high-density-information">2. Enhance Vision by Reading High-Density Information
&lt;/h2>&lt;p>Information density is key to determining a person’s vision. Long-term absorption of high-density information can help individuals break boundaries faster and overcome information disparities. Here are some suggestions:&lt;/p>
&lt;p>Prioritize Reading Text Information: Reading for an hour provides far more information than watching videos for the same duration. Text brings deep thinking and logic, enhancing rationality and scientific literacy.&lt;/p>
&lt;p>Avoid Fragmented Information from Short Videos: Although short videos are very efficient as entertainment, their information density could be higher and prone to fragmentation, disorder, and inefficiency. Therefore, reduce the use of short videos and read more books and long articles.&lt;/p>
&lt;p>Utilize Books and Online Self-Learning: Compared to attending classes, reading books and online self-learning are more efficient. Classes are suitable for those who need structured learning or have poor self-discipline while reading and self-learning are suitable for those who want to quickly and efficiently acquire information.&lt;/p>
&lt;h2 id="3-break-information-echo-chambers-search-more-push-less">3. Break Information Echo Chambers: Search More, Push Less
&lt;/h2>&lt;p>In the digital age, algorithm-driven information pushes make us increasingly passive, exacerbating the information echo chamber effect. Here are some coping strategies:&lt;/p>
&lt;p>Actively Search for Information: Conduct more active searches and rely less on algorithm-pushed information. This ensures that the information you get is more comprehensive and objective.&lt;/p>
&lt;p>Build Your Information Flow: Avoid passive information reception by establishing your reliable sources and channels, such as subscribing to high-quality news websites, blogs, and academic journals.&lt;/p>
&lt;p>Improve Information Literacy: Learn to identify the authenticity and reliability of information to avoid being misled by false information and noise.&lt;/p>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;p>Breaking information barriers is not just about acquiring more information but also about enhancing personal thinking and decision-making abilities. These three paths — choosing the right geographical location, optimizing information acquisition methods, and actively searching for information — are effective methods to help ordinary people bridge the information gap. I hope these suggestions can help you better control your future in the information age.&lt;/p></description></item><item><title>If You Could Be Reborn…</title><link>https://www.skstory.online/p/if-you-could-be-reborn/</link><pubDate>Mon, 01 Jul 2024 16:02:05 +0800</pubDate><guid>https://www.skstory.online/p/if-you-could-be-reborn/</guid><description>&lt;img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/0*MrRcX9ak6pIshcc8" alt="Featured image of post If You Could Be Reborn…" />&lt;h2 id="1">1
&lt;/h2>&lt;p>In August 2038, you were born into an ordinary family. Due to some fantastical reason, you were reborn as a baby.&lt;/p>
&lt;p>Everything seemed no different from your previous life, except that your root had become slightly smaller. Well, this didn’t matter much; in your heart, you were determined to become extraordinary in this life.&lt;/p>
&lt;p>Then, not long after, you experienced the first slap of your life.&lt;/p>
&lt;p>When you curiously looked around with wide eyes, your new father was anxiously staring at you because you weren’t crying at all, not making a sound.&lt;/p>
&lt;p>Worried you might have aspirated amniotic fluid, your father gave you a hard slap on the buttocks.&lt;/p>
&lt;p>This time, you really cried.&lt;/p>
&lt;p>Because it was excruciatingly painful.&lt;/p>
&lt;h2 id="2">2
&lt;/h2>&lt;p>Back home, you entered the most painful period of your life: breastfeeding.&lt;/p>
&lt;p>Because you retained all your memories from your previous life, you had no emotional connection with your new parents, and you had to accept a harsh reality.&lt;/p>
&lt;p>As an adult male with intact memories, you found yourself doing something psychologically uncomfortable.&lt;/p>
&lt;p>And you couldn’t refuse.&lt;/p>
&lt;p>In your tiny brain, your chaotic thoughts clashed fiercely with your infant body.&lt;/p>
&lt;p>Sex, fear, psychological turmoil, and breakdowns repeatedly played out in your mind.&lt;/p>
&lt;p>You had many ambitions, but you had no choice. You could only console yourself during the quiet nights, telling yourself it was okay, just like being in prison.&lt;/p>
&lt;p>But this prison lasted a very long time.&lt;/p>
&lt;h2 id="3">3
&lt;/h2>&lt;p>Fortunately, you didn’t die from anxiety and managed to get through that period.&lt;/p>
&lt;p>Now, you’ve started school, and your exceptional performance convinced your family to enroll you in the best elementary school.&lt;/p>
&lt;p>Hearing this made you feel a bit suppressed because it meant a significant financial burden for your ordinary family. You tried to persuade your parents that you didn’t need to go to such a place.&lt;/p>
&lt;p>But that was impossible. Your parents lovingly patted your head, telling you that as a child, you wouldn’t understand, and that they wouldn’t let hardship or poverty hinder your future.&lt;/p>
&lt;p>Without any decision-making power, you watched as your family slid further into financial strain.&lt;/p>
&lt;p>You thought it was okay, relying on your past life’s memories; elementary school would be a breeze.&lt;/p>
&lt;p>And it was. In the best elementary school, you continued to excel, showing a maturity far beyond your age.&lt;/p>
&lt;p>You felt everything was going as you had planned, that life was unfolding as you envisioned.&lt;/p>
&lt;h2 id="4">4
&lt;/h2>&lt;p>But fate’s blows came quickly, giving you little time to adjust.&lt;/p>
&lt;p>Entering middle school with a dazzling reputation, you suddenly realized you couldn’t control everything.&lt;/p>
&lt;p>You tried to recall your previous life, only to find that you’d forgotten all the knowledge from middle and high school. You could have studied hard in elementary school, but if you had such a resilient academic spirit, it’s hard to imagine how you were just an ordinary man in your previous life.&lt;/p>
&lt;p>You comforted yourself, thinking it was okay; even if you had to start over, you’d still have an advantage over others.&lt;/p>
&lt;p>However, you soon discovered that academics required talent.&lt;/p>
&lt;p>You still couldn’t grasp the dry and tedious math. Your only advantage was a slight improvement in English and social sciences compared to your previous life.&lt;/p>
&lt;p>These grades kept you at the top of your class but no longer at the pinnacle.&lt;/p>
&lt;p>People around you started to feel disappointed, and this disappointment peaked in high school.&lt;/p>
&lt;p>It was the same for you.&lt;/p>
&lt;p>In the intense pressure and isolation of high school, you couldn’t fathom why you had to endure another three years like this. You tried desperately to study and maintain your grades, but your lack of talent in certain subjects was evident.&lt;/p>
&lt;p>More painfully, you had no familiar advantages left. You had long forgotten high school knowledge, and you had planned to start studying in middle school, but maintaining your current grades took all your energy.&lt;/p>
&lt;p>So, suddenly, you were back at the same starting line.&lt;/p>
&lt;p>This disparity and pain made it even harder for you to focus. Your only luck was that you managed to date the girl you liked in high school, even though being with her always filled you with a sense of guilt.&lt;/p>
&lt;p>She was too young and too innocent.&lt;/p>
&lt;p>Amidst the pain, you realized your original plan was a complete failure. Just keeping up with your studies consumed most of your time, and your family had no extra money to support any early planning.&lt;/p>
&lt;p>And you were just an ordinary person. In your previous life, you were a financial novice for twenty years and never succeeded in business. You didn’t know what other avenues were available for achieving a class leap.&lt;/p>
&lt;p>You resigned yourself to fate.&lt;/p>
&lt;h2 id="5">5
&lt;/h2>&lt;p>You got into a slightly better college than in your previous life. This might be your advantage, but the sense of disparity still surrounded you and your family.&lt;/p>
&lt;p>You felt a bit ashamed, but at least the college was far from home, so you didn’t have to hear any gossip.&lt;/p>
&lt;p>Living on your family’s allowance, you continued dating your girlfriend in college, which seemed to be your only talent — approaching relationships with enough maturity.&lt;/p>
&lt;p>In college, you lived frugally, saving money while constantly reflecting on the path you took in your previous life.&lt;/p>
&lt;p>You had worked in many companies, going back and forth, and apart from that, you seemed to have no additional income. So, you thought, why not try investing? Maybe accumulating experience from now on would be beneficial for your future.&lt;/p>
&lt;p>But the money you saved by living frugally had to support certain activities with your girlfriend, yet you still chose to invest it.&lt;/p>
&lt;p>One day, while accompanying your girlfriend back to her hometown, you were dozing off in the car when you suddenly realized that her hometown was the same place as your hometown from your previous life.&lt;/p>
&lt;p>Through the window, you saw the dilapidated graves of your previous life’s parents, but you just turned your head, and no one knew what you were thinking.&lt;/p>
&lt;p>Time continued to fly by, and soon you graduated.&lt;/p>
&lt;h2 id="6">6
&lt;/h2>&lt;p>In the vast job market, you felt lost, just like everyone else. You didn’t know what to do because at this moment, you were really too ordinary.&lt;/p>
&lt;p>Your academic qualifications were mediocre, your resume was average, but fortunately, you had genuine emotions, which earned you what you believed to be love.&lt;/p>
&lt;p>But you were truly unwilling to accept this fate.&lt;/p>
&lt;p>So, in an instant, you found the answer. You decided to take the civil service exam for entry-level positions.&lt;/p>
&lt;p>Relying on your interpersonal skills from your previous life, you believed that at least in handling social relationships, you would be far better than your peers.&lt;/p>
&lt;p>This time, it seemed you made the right bet.&lt;/p>
&lt;p>You passed the exam, and by being cautious, obedient like a loyal dog, and handling tasks proficiently, you gained the appreciation of many people.&lt;/p>
&lt;p>You thought perhaps the real opportunity was here.&lt;/p>
&lt;h2 id="7">7
&lt;/h2>&lt;p>Time still did not stop turning, and troublesome matters followed one after another. Due to being separated from your girlfriend, the conflicts between both families intensified.&lt;/p>
&lt;p>You needed a house, money to take care of your parents, whose bodies were gradually deteriorating due to hard work.&lt;/p>
&lt;p>The enormous pressure fell on your shoulders, and sometimes when you woke up from a dream, a sense of unwillingness would surge, but the pain remained with you.&lt;/p>
&lt;p>You became silent because there were too many things you couldn’t share with others.&lt;/p>
&lt;p>You continued to work, but suddenly realized that perhaps getting a promotion was a distant dream.&lt;/p>
&lt;p>But you were still lucky, as you walked into the hall of marriage with your first love, which was actually the most extraordinary thing in your life.&lt;/p>
&lt;p>However, you vomited on your wedding day.&lt;/p>
&lt;p>Perhaps it was during the vows, you suddenly thought of your previous life.&lt;/p>
&lt;p>Many, many years ago, you had done the same thing — holding a woman’s hand in front of guests and smilingly saying to her, “I will love you forever.”&lt;/p>
&lt;p>Suddenly, you didn’t know how long “forever” was.&lt;/p>
&lt;p>You also suddenly didn’t know what love really was in your heart.&lt;/p>
&lt;h2 id="8">8
&lt;/h2>&lt;p>The hands of time continued to turn, and everything came so quickly.&lt;/p>
&lt;p>Your wife’s pregnancy, the birth of your child, the aging and death of your parents. You began to shuttle back and forth between the hospital and the government office outside of work.&lt;/p>
&lt;p>You mechanically did the things you had done in your previous life, with the only fluctuation being the day your child was born.&lt;/p>
&lt;p>You rushed into the delivery room like a madman, trying to kill the newborn child.&lt;/p>
&lt;p>Many people held you down, but you just shouted, “He is just like me.”&lt;/p>
&lt;p>You knew that you might just be overly sensitive, but many people began to think you were crazy.&lt;/p>
&lt;p>Then came your aging, and your wife’s aging. You spent a lifetime but didn’t reach the so-called official position, yet you and your wife managed to gather the funds for your child’s education and living expenses.&lt;/p>
&lt;p>You supported this family, worrying about everything for your child, then slowly.&lt;/p>
&lt;p>Your child grew up, and you grew old.&lt;/p>
&lt;p>And then.&lt;/p>
&lt;p>Your parents, your in-laws, and your wife all died. The friends and elders you knew in this life also began to pass away.&lt;/p>
&lt;p>The day your wife died, she held your hand, seemingly returning to the time when she first met you, with curious light in her eyes, just like when she was sixteen.&lt;/p>
&lt;p>She gently told you that she felt she had never really understood you all her life, and she thought you were very, very tired.&lt;/p>
&lt;p>But she also smiled and told you that she felt it was enough to have loved you in this life.&lt;/p>
&lt;p>You just held her hand and watched the light in her eyes suddenly go out.&lt;/p>
&lt;p>But at that moment, you didn’t cry; you just fell into a daze.&lt;/p>
&lt;p>You thought of many, many years ago when you had also held another woman’s hand like this, and she had long been dead.&lt;/p>
&lt;h2 id="9">9
&lt;/h2>&lt;p>After your wife died, you called your son. He was already established and looked very tired.&lt;/p>
&lt;p>You scrutinized this son, and it seemed you had never really understood him. You used to have your defenses, but at this moment, you suddenly felt relieved.&lt;/p>
&lt;p>You hugged him tightly and then told him you were leaving and that he shouldn’t come looking for you.&lt;/p>
&lt;p>Your son was somewhat surprised, but in the end, he nodded.&lt;/p>
&lt;p>After leaving home, you went to many places.&lt;/p>
&lt;p>You went to a certain mountain you remembered from your previous life. Amidst the weeds were two graves: one was yours, and the other was your wife from that time.&lt;/p>
&lt;p>You suddenly collapsed in front of the graves and then fell into a deep sleep.&lt;/p>
&lt;p>In your dream, you saw many people, all waiting for you. You wanted to cry, but as soon as you made a sound, you woke up from the stupor.&lt;/p>
&lt;p>You struggled to stand up and took a car to a distant temple.&lt;/p>
&lt;p>You remembered that in your previous life, there had been a young monk in the temple when you were old. But when you stepped into the temple this time, there was only an old monk.&lt;/p>
&lt;h2 id="10">10
&lt;/h2>&lt;p>The old monk was not surprised by your arrival; he just led you to the statue of the Bodhisattva and asked if you felt any regrets.&lt;/p>
&lt;p>You looked up at the solemn and dignified Bodhisattva statue and, with a faint smile, told the old monk that you had once tried your utmost to achieve a class leap and become an extraordinary person.&lt;/p>
&lt;p>You once thought your greatest failure was still becoming an ordinary person.&lt;/p>
&lt;p>But now, you seemed to understand that what you truly regretted was never cherishing the life of an ordinary person.&lt;/p>
&lt;p>You told the old monk that you had wasted a lot of time and a lot of love. You had many questions that you never figured out in the end, such as who you really were, who you truly loved, and where it all began and ended.&lt;/p>
&lt;p>The old monk also smiled and told you that life has no do-overs.&lt;/p>
&lt;p>You shook your head and said, “Life shouldn’t have do-overs.”&lt;/p>
&lt;p>The old monk pointed to a large bell in the courtyard and told you that he had been ringing the bell all his life. Whenever he couldn’t figure out how to become enlightened, he would do this.&lt;/p>
&lt;p>The old monk urged you to give it a try, so you did.&lt;/p>
&lt;p>You grabbed the rope tightly and then swung it with all your might. A clear bell sound suddenly rang out, echoing through the surroundings, resounding through the sky like a crane’s call.&lt;/p>
&lt;p>The sound passed through the temple walls, through the vines on the mountain, over the broken bridge on the small river, and across the vast yet desolate plain.&lt;/p>
&lt;p>The bell sound swept through the mountain wind, carrying your love and hate, your confusion, your rights and wrongs, traversing your two lifetimes, and finally spiraled down, landing on your grave.&lt;/p>
&lt;p>You suddenly realized something. This might be the last bit of enlightenment for an ordinary person like you, at the end of your life.&lt;/p>
&lt;p>The old monk walked over to you. He watched as your breathing became calmer and fainter.&lt;/p>
&lt;p>You looked at the old monk and told him you had figured out the answer to his long-standing question: how a person should become enlightened.&lt;/p>
&lt;p>The old monk leaned down.&lt;/p>
&lt;p>With your last bit of strength, you uttered three words:&lt;/p>
&lt;p>“Don’t look back.”&lt;/p>
&lt;p>Finally, you truly passed away.&lt;/p></description></item></channel></rss>